[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R33 Phase Cluster-Randomized Controlled Trial",
    "section": "",
    "text": "Our primary objective is to evaluate whether the use of the DETECT-RPC screening tool increases the average reporting of EM by HBPC clinicians relative to a baseline period where they did not use the DETECT-RPC screening tool.\nThere are two protocols for this phase:\n\nUniversal EM Screening (RCT)\nCaregiver Dyad Follow-Up Interviews\n\n\n\nIn this phase of the study (year 3-5), we will randomize approximately 43 home-based primary care clinicians to either use the adapted DETECT screening tool at every qualified home based primary care patient encounter (experimental condition) or continue to provide standard care (control condition). Providers randomized to the experimental condition will use the adapted DETECT tool at every qualified patient encounter. A waiver of informed consent is approved, as it requires no direct input from the patient; rather, it is a purely observation-based tool, which is completed by the clinician. Over the three years of follow-up, we expect our partner home-based primary care programs to treat approximately 6,150 older adults. Through the randomization process, we expect half of that number to be screened by a clinician using the adapted DETECT tool.\n\n\n\nIn this phase, we will recruit a purposive sample of 180 caregiving dyads consisting of family caregivers and their care recipients, half of which will be living with Alzheimer’s Disease or Related Dementias (ADRD). The study is recruiting dyads because we are interested in caregiver behaviors and their relationship to care recipient outcomes. The caregiving dyads will be recruited from among patients who are actively enrolled in one of our site-specific home-based primary care programs.\n\n\n\n\n\nRigorously evaluate the impact of DETECT-RPC on clinician identification and reporting of older adults with increased risk of EM to the appropriate authorities (RFA key question KQ3).\nRigorously evaluate the effect of DETECT-RPC on targeted mechanisms of action (i.e., current barriers to identification and reporting) elucidated in the R61 phase of the study (mixed-methods).\nRigorously evaluate the benefits (i.e., reduce exposure to abuse and neglect, reduced physical or mental morbidity, and reduced mortality) and harms of screening with DETECT-RPC (RFA key questions KQ1 and KQ4) (mixed-methods).\n\n\n\n\n\nReport on the progress towards recruiting goals.\nReport the fidelity of DETECT-RPC use at each of the study sites\nReport on adverse events and clinical trial stopping criteria."
  },
  {
    "objectID": "index.html#objectives",
    "href": "index.html#objectives",
    "title": "R33 Phase Cluster-Randomized Controlled Trial",
    "section": "",
    "text": "Our primary objective is to evaluate whether the use of the DETECT-RPC screening tool increases the average reporting of EM by HBPC clinicians relative to a baseline period where they did not use the DETECT-RPC screening tool.\nThere are two protocols for this phase:\n\nUniversal EM Screening (RCT)\nCaregiver Dyad Follow-Up Interviews\n\n\n\nIn this phase of the study (year 3-5), we will randomize approximately 43 home-based primary care clinicians to either use the adapted DETECT screening tool at every qualified home based primary care patient encounter (experimental condition) or continue to provide standard care (control condition). Providers randomized to the experimental condition will use the adapted DETECT tool at every qualified patient encounter. A waiver of informed consent is approved, as it requires no direct input from the patient; rather, it is a purely observation-based tool, which is completed by the clinician. Over the three years of follow-up, we expect our partner home-based primary care programs to treat approximately 6,150 older adults. Through the randomization process, we expect half of that number to be screened by a clinician using the adapted DETECT tool.\n\n\n\nIn this phase, we will recruit a purposive sample of 180 caregiving dyads consisting of family caregivers and their care recipients, half of which will be living with Alzheimer’s Disease or Related Dementias (ADRD). The study is recruiting dyads because we are interested in caregiver behaviors and their relationship to care recipient outcomes. The caregiving dyads will be recruited from among patients who are actively enrolled in one of our site-specific home-based primary care programs."
  },
  {
    "objectID": "index.html#r33-specific-aims",
    "href": "index.html#r33-specific-aims",
    "title": "R33 Phase Cluster-Randomized Controlled Trial",
    "section": "",
    "text": "Rigorously evaluate the impact of DETECT-RPC on clinician identification and reporting of older adults with increased risk of EM to the appropriate authorities (RFA key question KQ3).\nRigorously evaluate the effect of DETECT-RPC on targeted mechanisms of action (i.e., current barriers to identification and reporting) elucidated in the R61 phase of the study (mixed-methods).\nRigorously evaluate the benefits (i.e., reduce exposure to abuse and neglect, reduced physical or mental morbidity, and reduced mortality) and harms of screening with DETECT-RPC (RFA key questions KQ1 and KQ4) (mixed-methods)."
  },
  {
    "objectID": "index.html#r33-annual-milestones",
    "href": "index.html#r33-annual-milestones",
    "title": "R33 Phase Cluster-Randomized Controlled Trial",
    "section": "",
    "text": "Report on the progress towards recruiting goals.\nReport the fidelity of DETECT-RPC use at each of the study sites\nReport on adverse events and clinical trial stopping criteria."
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/02_clinician_tracker_data_analysis.html",
    "href": "data_management/mock_data_creation_and_analysis/02_clinician_tracker_data_analysis.html",
    "title": "Load Packages",
    "section": "",
    "text": "Load Packages\n\n\nLoad data\n\n\nAdd calculated values to raw clinician tracker data\n\n\nSave data"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html",
    "href": "data_management/data_02_detect_tool_pilot_test.html",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "",
    "text": "In this file, we create some new variables that summarize the completion and missingness counts for various variables in the DETECT tool pilot study data. These new variables will used in creating interactive plots using the plotly package."
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#create-fuction-to-generate-missingness-variables",
    "href": "data_management/data_02_detect_tool_pilot_test.html#create-fuction-to-generate-missingness-variables",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "Create fuction to generate missingness variables",
    "text": "Create fuction to generate missingness variables\nThis function will also take branching/ skip logic into consideration.\n\npilot_miss &lt;- function(df, var, condition = NULL){\n  if(is.null(condition)){\n    new_df &lt;- df %&gt;% \n      mutate(\n        \"{var}_miss\" := case_when(\n          is.na(.data[[var]]) ~ 1,\n          TRUE ~ 0\n        )\n      )\n  }else if(!is.null(condition)){\n    new_df &lt;- df %&gt;%\n      mutate(\n         \"{var}_miss\" := case_when(\n           eval(parse(text = condition)) & is.na(.data[[var]]) ~ 1,\n           !(eval(parse(text = condition))) & is.na(.data[[var]]) ~ NA,\n           eval(parse(text = condition)) & !is.na(.data[[var]]) ~ 0\n        )       \n      )\n  }\n  \n  new_df %&gt;% relocate(paste0(var, \"_miss\"), .after = var)\n}"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#variables-with-no-conditional-arguments-skip-logic",
    "href": "data_management/data_02_detect_tool_pilot_test.html#variables-with-no-conditional-arguments-skip-logic",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "Variables with no conditional arguments/ skip logic",
    "text": "Variables with no conditional arguments/ skip logic\n\nvars &lt;- c(\"ri_patient_mrn\", \"ri_institution_7cat_f\", \"ri_clinician_id_name\", \n          \"ri_necessities_3cat_f\", \"ri_environment_3cat_f\", \n          \"ri_caregiver_3cat_f\", \"ri_sedated_3cat_f\", \"ri_isolated_3cat_f\", \n          \"ri_anxious_3cat_f\", \"ri_prohibited_3cat_f\", \"ri_unmet_needs_3cat_f\", \n          \"ri_injuries_3cat_f\", \"suspect_em_2cat_f\", \"ri_reflection_2cat_f\"\n          )\ncondition &lt;- NULL\n\n\nfor(var in vars){\n  missing_data &lt;- pilot_miss(df = missing_data, var = var, \n                     condition = condition)  \n}\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(var)\n\n  # Now:\n  data %&gt;% select(all_of(var))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;."
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#variables-with-conditional-arguments-skip-logic",
    "href": "data_management/data_02_detect_tool_pilot_test.html#variables-with-conditional-arguments-skip-logic",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "Variables with conditional arguments/ skip logic",
    "text": "Variables with conditional arguments/ skip logic\n\nri_environment_un_reason\n\nvar &lt;- \"ri_environment_un_reason\"\n\ncondition_vars &lt;- c(\"ri_necessities_3cat_f\", \"ri_environment_3cat_f\")\n\ncondition &lt;- \"if_any(.cols = all_of(condition_vars), .fns = ~.x == 'Unable to assess')\"\n\n\nmissing_data &lt;- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n\n\n\nri_caregiver_un_reason\n\nvar &lt;- \"ri_caregiver_un_reason_2cat_f\"\ncondition &lt;- \"ri_caregiver_3cat_f == 'Unable to assess'\"\n\n\nmissing_data &lt;- pilot_miss(df = missing_data, var = var, \n                   condition = condition) \n\n\n\nri_caregiver_oth\n\nvar &lt;- \"ri_caregiver_oth\"\ncondition &lt;- \"ri_caregiver_un_reason_2cat_f == 'Other reason'\"\n\n\nmissing_data &lt;- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n\n\n\nri_patient_assess\n\nvar &lt;- \"ri_patient_assess\"\n\ncondition_vars &lt;- c(\"ri_sedated_3cat_f\", \"ri_isolated_3cat_f\",\n                    \"ri_anxious_3cat_f\", \"ri_prohibited_3cat_f\", \n                    \"ri_unmet_needs_3cat_f\", \"ri_injuries_3cat_f\")\n\ncondition &lt;- \"if_any(.cols = all_of(condition_vars), .fns = ~.x == 'Unable to assess')\"\n\n\nmissing_data &lt;- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n\n\n\nri_em_no_reason\n\nvar &lt;- \"ri_em_no_reason\"\n\ncondition_vars &lt;- c(\"ri_necessities_3cat_f\", \"ri_environment_3cat_f\",\n                    \"ri_caregiver_3cat_f\", \"ri_sedated_3cat_f\", \n                    \"ri_isolated_3cat_f\", \"ri_anxious_3cat_f\", \n                    \"ri_prohibited_3cat_f\", \"ri_unmet_needs_3cat_f\", \n                    \"ri_injuries_3cat_f\")\n\ncondition &lt;- \"suspect_em_2cat_f == 'No' & if_any(.cols = all_of(condition_vars), \n.fns = ~.x == 'Yes')\"\n\n\nmissing_data &lt;- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n\n\n\nri_em_reason\n\nvar &lt;- \"ri_em_reason\"\n\ncondition_vars &lt;- c(\"ri_necessities_3cat_f\", \"ri_environment_3cat_f\",\n                    \"ri_caregiver_3cat_f\", \"ri_sedated_3cat_f\", \n                    \"ri_isolated_3cat_f\", \"ri_anxious_3cat_f\", \n                    \"ri_prohibited_3cat_f\", \"ri_unmet_needs_3cat_f\", \n                    \"ri_injuries_3cat_f\")\n\ncondition &lt;- \"suspect_em_2cat_f == 'Yes' & if_all(.cols = all_of(condition_vars), \n.fns = ~.x != 'Yes')\"\n\n\nmissing_data &lt;- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n\n\n\nEM Type vars\n\nem_type_vars &lt;- c(\"ri_em_type_1_2cat_f\", \"ri_em_type_2_2cat_f\", \"ri_em_type_3_2cat_f\", \n          \"ri_em_type_4_2cat_f\", \"ri_em_type_5_2cat_f\", \"ri_em_type_6_2cat_f\", \n          \"ri_em_type_7_2cat_f\", \"ri_em_type_98_2cat_f\", \"ri_em_type_99_2cat_f\")\n\n\nmissing_data &lt;- missing_data %&gt;%\n  mutate(\n    ri_em_type_miss = case_when(\n      suspect_em_2cat_f == 'Yes' & \n        if_all(.cols = all_of(em_type_vars), \n               .fns = ~.x == \"No\") ~ 1,\n      suspect_em_2cat_f != 'Yes' & \n        if_all(.cols = all_of(em_type_vars), \n               .fns = ~.x == \"No\") ~ NA,\n      suspect_em_2cat_f == 'Yes' & \n        if_any(.cols = all_of(em_type_vars), \n               .fns = ~.x == \"Yes\") ~ 0      \n      )\n  )\n\n\n\nri_em_type_other\n\nvar &lt;- \"ri_em_type_other\"\ncondition &lt;- \"ri_em_type_98_2cat_f == 'Checked'\"\n\n\nmissing_data &lt;- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n\n\n\nri_report_2cat_f\n\nvar &lt;- \"ri_report_2cat_f\"\ncondition &lt;- \"suspect_em_2cat_f == 'Yes'\"\n\n\nmissing_data &lt;- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n\n\n\nri_aps_no_reason\n\nvar &lt;- \"ri_aps_no_reason\"\ncondition &lt;- \"ri_report_2cat_f == 'No'\"\n\n\nmissing_data &lt;- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n\n\n\nri_refer_svcs_2cat_f\n\nvar &lt;- \"ri_refer_svcs_2cat_f\"\ncondition &lt;- \"suspect_em_2cat_f == 'Yes'\"\n\n\nmissing_data &lt;- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n\n\n\nri_refer_svcs_specify\n\nvar &lt;- \"ri_refer_svcs_specify\"\ncondition &lt;- \"ri_refer_svcs_2cat_f == 'Yes'\"\n\n\nmissing_data &lt;- pilot_miss(df = missing_data, var = var, \n                   condition = condition) \n\n\n\nri_reflection_notes\n\nvar &lt;- \"ri_reflection_notes\"\ncondition &lt;- \"ri_reflection_2cat_f == 'Yes'\"\n\n\nmissing_data &lt;- pilot_miss(df = missing_data, var = var, \n                   condition = condition)"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#all",
    "href": "data_management/data_02_detect_tool_pilot_test.html#all",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "All",
    "text": "All\n\nmissing_plot_data &lt;- create_missing_plot_data(missing_data)"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#baylor",
    "href": "data_management/data_02_detect_tool_pilot_test.html#baylor",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "Baylor",
    "text": "Baylor\n\nbaylor_missing_plot_data &lt;-  missing_data %&gt;% \n  filter(ri_institution_7cat_f == \"Baylor College of Medicine - BT House Calls\") %&gt;%\n  create_missing_plot_data()"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#johns-hopkins",
    "href": "data_management/data_02_detect_tool_pilot_test.html#johns-hopkins",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "Johns Hopkins",
    "text": "Johns Hopkins\n\njh_missing_plot_data &lt;-  missing_data %&gt;% \n  filter(ri_institution_7cat_f == \"Johns Hopkins - JHOME\") %&gt;%\n  create_missing_plot_data()"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#ucsf",
    "href": "data_management/data_02_detect_tool_pilot_test.html#ucsf",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "UCSF",
    "text": "UCSF\n\nucsf_missing_plot_data &lt;-  missing_data %&gt;% \n  filter(ri_institution_7cat_f == \"UCSF - Care at Home Program\") %&gt;%\n  create_missing_plot_data()"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#uab",
    "href": "data_management/data_02_detect_tool_pilot_test.html#uab",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "UAB",
    "text": "UAB\n\nuab_missing_plot_data &lt;-  missing_data %&gt;% \n  filter(ri_institution_7cat_f == \"University of Alabama - UAB House Calls\") %&gt;%\n  create_missing_plot_data()"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#utsw",
    "href": "data_management/data_02_detect_tool_pilot_test.html#utsw",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "UTSW",
    "text": "UTSW\n\nutsw_missing_plot_data &lt;-  missing_data %&gt;% \n  filter(ri_institution_7cat_f == \"UT Southwestern - COVE\") %&gt;%\n  create_missing_plot_data()"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#lbj",
    "href": "data_management/data_02_detect_tool_pilot_test.html#lbj",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "LBJ",
    "text": "LBJ\n\nlbj_missing_plot_data &lt;-  missing_data %&gt;% \n  filter(ri_institution_7cat_f == \"UTH Houston - LBJ House Calls\") %&gt;%\n  create_missing_plot_data()"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#utp",
    "href": "data_management/data_02_detect_tool_pilot_test.html#utp",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "UTP",
    "text": "UTP\n\nutp_missing_plot_data &lt;-  missing_data %&gt;% \n  filter(ri_institution_7cat_f == \"UTH Houston - UT Physicians House Calls\") %&gt;%\n  create_missing_plot_data()"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#indicators-of-abuse",
    "href": "data_management/data_02_detect_tool_pilot_test.html#indicators-of-abuse",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "Indicators of abuse",
    "text": "Indicators of abuse\n\nind_em_plot_data &lt;- data_subset(ind_em_vars, \n                                        level_list = c(\"Yes\", \"No\", \n                                                       \"Unable to assess\"))"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#suspect-em",
    "href": "data_management/data_02_detect_tool_pilot_test.html#suspect-em",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "Suspect EM",
    "text": "Suspect EM\n\nsuspect_em_plot_data &lt;- data_subset(\"suspect_em_2cat_f\", \n                                        level_list = c(\"Yes\", \"No\"))"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#em-type",
    "href": "data_management/data_02_detect_tool_pilot_test.html#em-type",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "EM Type",
    "text": "EM Type\n\nem_type_plot_data &lt;- data_subset(em_type_vars, \n                                        level_list = c(\"Yes\", \"No\"))"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#intent-to-report-to-aps",
    "href": "data_management/data_02_detect_tool_pilot_test.html#intent-to-report-to-aps",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "Intent to Report to APS",
    "text": "Intent to Report to APS\n\nreport_plot_data &lt;- dash_data %&gt;% \n  select(record_id, ri_institution_7cat_f, ri_clinician_id, suspect_em_2cat_f,\n         ri_report_2cat_f) %&gt;%\n  tidyr::pivot_longer(ri_report_2cat_f, \n                      names_to = \"var\", values_to = \"value\") %&gt;% \n  # Add labels\n  left_join(var_desc, by = c(\"var\" = \"variable\"))  %&gt;%\n    mutate(\n      # Convert NA into a character value\n      # Distinguish between true NA and EM not suspected\n      value = case_when(is.na(value) & suspect_em_2cat_f == \"Yes\" ~ \"NA\",\n                        is.na(value) & \n                          suspect_em_2cat_f != \"Yes\" ~ \"EM not suspected\",\n                        TRUE ~ value),\n      value = factor(value, \n                     levels = c(\"Yes\", \"No\", \"EM not suspected\", \"NA\"),\n                     exclude = NULL\n                     ),\n      # Ensure the order of labels in dataframe is maintained in the plot\n      label = factor(label, levels = rev(unique(label)))\n    )\n\n\nCounts for APS reports intended and made\n\ninstitution_long_lat &lt;- data.frame(\n  institution = c(\n    \"Baylor College of Medicine - BT House Calls\",  \"Johns Hopkins - JHOME\", \n    \"UCSF - Care at Home Program\", \"University of Alabama - UAB House Calls\",\n    \"UT Southwestern - COVE\", \"UTH Houston\"\n  ),\n  longitude = c(29.71052761800321, 39.33008377311541, 37.7669884176172, \n                33.502461653045216, 32.815820023948795, 29.703289163249107),\n  latitude = c(-95.39623789990478, -76.62051772290135, -122.45905392951434,\n               -86.80513736700209, -96.8448134037558, -95.40319950387807)\n)\n\n\n# Intended reports\nreports_intended &lt;- dash_data %&gt;% select(ri_patient_mrn, ri_institution_7cat_f, \n                                          ri_report_2cat_f) %&gt;% \n  # Exclude fake patient\n  filter(ri_patient_mrn != \"Julia_Test_Patient1\") %&gt;%\n  # Filter only rows where an intention to report was indicated\n  filter(ri_report_2cat_f == \"Yes\") %&gt;%\n  # Standardize the MRN to remove trailing zeros at the beginning\n  mutate(\n    std_mrn = gsub(\"^0+\", \"\", ri_patient_mrn)\n  ) %&gt;% relocate(std_mrn, .after = ri_patient_mrn) \n\n# Date range\nstart_date &lt;- min(as.Date(dash_data$ri_date))\nend_date &lt;- max(as.Date(dash_data$ri_date))\n\n# Reports made\nreports_made &lt;- aps_reports_data %&gt;% \n  filter(between(as.Date(ar_encounter_date), start_date, end_date)) %&gt;% \n  # Standardize the MRN to remove trailing zeros at the beginning\n  mutate(\n    std_mrn = gsub(\"^0+\", \"\", ar_mrn)\n  ) %&gt;% relocate(std_mrn, .after = ar_mrn) %&gt;%\n  filter(std_mrn %in% reports_intended$std_mrn) %&gt;% nrow()\n\nreports_intended &lt;- reports_intended %&gt;% nrow()"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#indicators-of-em-module-and-suspect-em",
    "href": "data_management/data_02_detect_tool_pilot_test.html#indicators-of-em-module-and-suspect-em",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "Indicators of EM Module and Suspect EM",
    "text": "Indicators of EM Module and Suspect EM\n\nind_em_labs &lt;- c(\n  \"Unmet needs\", \"Unexplained injuries\", \"Prohibited\", \"Isolated\", \n  \"Environment health or safety\\nconcern\", \"Defensive\", \"Chemically sedated\",\n  \"Anxious\", \"Absence of necessities\"\n  )\n\n\n# Character vector of filters\nind_sus_em_plot_data &lt;- dash_data %&gt;% \n  select(record_id, all_of(ind_em_vars), suspect_em_2cat_f) %&gt;%\n  tidyr::pivot_longer(all_of(ind_em_vars), \n                      names_to = \"em_ind_var\", values_to = \"em_ind_value\") %&gt;%\n  # Add labels\n  left_join(var_desc, by = c(\"em_ind_var\" = \"variable\")) %&gt;%\n  rename(\n    \"ind_em_label\" = \"label\"\n  ) %&gt;%\n  mutate(\n    # Include line breaks in labels\n    ind_em_label = stringr::str_wrap(ind_em_label, width = 30),\n    ind_em_label = factor(ind_em_label),\n    # Convert NA into a character value\n    em_ind_value = case_when(is.na(em_ind_value) ~ \"NA\",\n                      TRUE ~ em_ind_value),\n    em_ind_value = factor(em_ind_value, \n                   levels = c(\"Yes\", \"No\", \"Unable to assess\", \"NA\"),\n                   exclude = NULL\n                   )\n  ) %&gt;%\n  # Replace the EM indicator variable name column with the labels\n  relocate(ind_em_label, .after = suspect_em_2cat_f) %&gt;%\n  select(-c(description, em_ind_var)) %&gt;%\n  reframe(\n    count = n(), .by = c(suspect_em_2cat_f,ind_em_label, em_ind_value)\n  ) %&gt;%   \n  # Include counts for factor levels that have zero counts\n  group_by(suspect_em_2cat_f, ind_em_label) %&gt;%\n  tidyr::complete(em_ind_value) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n    count = tidyr::replace_na(count, 0),\n    perc = case_when(\n      suspect_em_2cat_f == \"Yes\" ~ (count/suspect_em_no) *100,\n      suspect_em_2cat_f == \"No\" ~ (count/not_suspect_em_no) *100\n      ),\n    perc_label = paste0(format(round(perc, 1), nsmall = 1), \"%\")\n    )  \n\n\nind_sus_em_table_data &lt;- ind_sus_em_plot_data %&gt;%\n  select(-c(perc)) %&gt;%\n  mutate(\n    ind_em_label = factor(ind_em_label, levels = ind_em_labs)\n  ) %&gt;% arrange(ind_em_label)\n\n\nind_sus_em_table_data &lt;- add_shade_column_x_rows(ind_sus_em_table_data, 4)"
  },
  {
    "objectID": "data_management/data_02_detect_tool_pilot_test.html#suspect-em-and-em-type",
    "href": "data_management/data_02_detect_tool_pilot_test.html#suspect-em-and-em-type",
    "title": "Create variables for visualizing the DETECT tool pilot study data",
    "section": "Suspect EM and EM Type",
    "text": "Suspect EM and EM Type\n\nem_type_labs &lt;- c( \"Self-neglect suspected\", \"Financial exploitation suspected\", \n                   \"Emotional or psychological abuse suspected\", \n                   \"Physical abuse suspected\",  \"Sexual abuse suspected\", \n                   \"Caregiver neglect suspected\", \"Abandonment suspected\", \n                   \"Other mistreatment type suspected\", \n                   \"Dont know/ Not sure of mistreatment type\")\n\n\nsus_type_em_plot_data &lt;- dash_data %&gt;%\n  select(record_id, suspect_em_2cat_f, all_of(em_type_vars)) %&gt;%\n  tidyr::pivot_longer(all_of(em_type_vars), \n                      names_to = \"em_type_var\", values_to = \"em_type_value\") %&gt;%\n  # Add labels\n  left_join(var_desc, by = c(\"em_type_var\" = \"variable\")) %&gt;%\n  filter(suspect_em_2cat_f == \"Yes\") %&gt;%\n  # Make `label` a factor variable\n  mutate(\n    label = factor(label, levels = rev(em_type_labs)),\n    # Convert NA into a character value\n    em_type_value = case_when(is.na(em_type_value) ~ \"NA\",\n                      TRUE ~ em_type_value),\n    em_type_value = factor(em_type_value, \n                   levels = c(\"Yes\", \"No\", \"NA\"),\n                   exclude = NULL\n                   )\n  ) %&gt;% \n  # Relocate the label and remove the description variable\n  relocate(label, .after = suspect_em_2cat_f) %&gt;%\n  select(-c(description, em_type_var, suspect_em_2cat_f)) %&gt;%\n  reframe(\n    count = n(), .by = c(label, em_type_value)\n  ) %&gt;%   \n  # Include counts for factor levels that have zero counts\n  group_by(label) %&gt;%\n  tidyr::complete(em_type_value) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n    count = tidyr::replace_na(count, 0),\n    perc = paste0(format(round((count/suspect_em_no) *100, 1), nsmall = 1), \"%\")\n    )\n\n\nsus_type_em_table_data &lt;- sus_type_em_plot_data %&gt;%\n  mutate(\n    label = factor(label, levels = em_type_labs)\n  ) %&gt;% arrange(label)\n\n\nsus_type_em_table_data &lt;- add_shade_column_x_rows(sus_type_em_table_data, 3)"
  },
  {
    "objectID": "data_management/data_01_aps_reports.html",
    "href": "data_management/data_01_aps_reports.html",
    "title": "Clean APS reports data imported from REDCap",
    "section": "",
    "text": "Overview\nIn this file, we do some initial cleaning of the APS reports data imported from REDCap to prepare it for dashboard summary.\n\n\nLoad packages\n\nlibrary(dplyr, warn.conflicts = FALSE)\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\nlibrary(readr)\n\nWarning: package 'readr' was built under R version 4.3.2\n\nlibrary(purrr)\n\nWarning: package 'purrr' was built under R version 4.3.2\n\nlibrary(stringr)\n\nWarning: package 'stringr' was built under R version 4.3.2\n\nlibrary(janitor)\nlibrary(here)\n\nWarning: package 'here' was built under R version 4.3.3\n\n\n\n\nLoad custom functions\n\nsource(here::here(\"R\", \"recoding_factoring_relocating.R\"))\nsource(here::here(\"R\", \"nums_to_na.R\"))\nsource(here::here(\"R\", \"data_cleaning_tools.R\"))\n\n\n\nLoad data\n\n# Raw data with numerically coded values\naps &lt;- read_csv(here::here(\"data\", \"aps_report_data.csv\")) %&gt;% clean_names()\n\n# Data labels\naps_lab &lt;- read_csv(here::here(\"data\", \"aps_report_data_labels.csv\"))\n\n\nView(aps_lab[51:64])\n\n\nvar_desc &lt;- data.frame(variable = names(aps),\n                       description = names(aps_lab)\n                       # label = labels\n                       ) \n\nwrite.csv(var_desc, here::here(\"data\", \"aps_var_descs.csv\"))"
  },
  {
    "objectID": "data_management/data_01_detect_tool_pilot_test.html",
    "href": "data_management/data_01_detect_tool_pilot_test.html",
    "title": "Clean DETECT tool pilot study data imported from REDCap",
    "section": "",
    "text": "In this file, we do some initial cleaning of the DETECT tool pilot study data imported from REDCap to prepare it for dashboard summary. This pilot lasted for 2 weeks, starting on 11/11/2024 and ending on 11/25/2023."
  },
  {
    "objectID": "data_management/data_01_detect_tool_pilot_test.html#replace-reporting-instument-timestamp-variable-with-timestamp-end-variable",
    "href": "data_management/data_01_detect_tool_pilot_test.html#replace-reporting-instument-timestamp-variable-with-timestamp-end-variable",
    "title": "Clean DETECT tool pilot study data imported from REDCap",
    "section": "Replace reporting instument timestamp variable with timestamp end variable",
    "text": "Replace reporting instument timestamp variable with timestamp end variable\nThe reporting_instrument_timestamp variable contains information on both the submission time and the completion status of each survey response. The variable reporting_instrument_complete also provides completion status information. A new variable will be created that only contains the sumbmission time and the reporting_instrument_timestamp variable will be removed.\n\ntool_pilot &lt;- tool_pilot %&gt;% \n  mutate(\n    timestamp_end = case_when(\n      is.na(reporting_instrument_timestamp) ~ NA,\n      reporting_instrument_timestamp == \"[not completed]\" ~ NA,\n      TRUE ~ reporting_instrument_timestamp\n    ),\n    timestamp_end = as.POSIXct(timestamp_end, tz = \"UTC\")\n  ) %&gt;% relocate(c(timestamp_end, reporting_instrument_complete),\n                 .after = ri_timestamp_start) %&gt;%\n  select(-c(reporting_instrument_timestamp))"
  },
  {
    "objectID": "data_management/data_01_detect_tool_pilot_test.html#clinician-names",
    "href": "data_management/data_01_detect_tool_pilot_test.html#clinician-names",
    "title": "Clean DETECT tool pilot study data imported from REDCap",
    "section": "Clinician names",
    "text": "Clinician names\n\nclinician_names &lt;- c(\"ri_clinician_bcm\", \"ri_clinician_bcm_oth\", \n                     \"ri_clinician_jh\", \"ri_clinician_jh_oth\", \n                     \"ri_clinician_ucsf\", \"ri_clinician_ucsf_oth\", \n                     \"ri_clinician_uab\", \"ri_clinician_uab_oth\", \n                     \"ri_clinician_utsw\", \"ri_clinician_utsw_oth\", \n                     \"ri_clinician_lbj\", \"ri_clinician_lbj_oth\", \n                     \"ri_clinician_utp\", \"ri_clinician_utp_oth\")\n\ntool_pilot &lt;- tool_pilot %&gt;% \n  mutate(\n    ri_clinician_id_name = coalesce(ri_clinician_utp_oth, ri_clinician_utp, \n                                     ri_clinician_lbj_oth, ri_clinician_lbj, \n                                     ri_clinician_utsw_oth, ri_clinician_utsw, \n                                     ri_clinician_uab_oth, ri_clinician_uab, \n                                     ri_clinician_ucsf_oth, ri_clinician_ucsf, \n                                     ri_clinician_jh_oth, ri_clinician_jh, \n                                     ri_clinician_bcm_oth, ri_clinician_bcm)\n    ) %&gt;% select(-c(all_of(clinician_names))) %&gt;%\n  relocate(ri_clinician_id_name, .after = ri_clinician_id)"
  },
  {
    "objectID": "data_management/data_01_detect_tool_pilot_test.html#numeric-and-factor-variables",
    "href": "data_management/data_01_detect_tool_pilot_test.html#numeric-and-factor-variables",
    "title": "Clean DETECT tool pilot study data imported from REDCap",
    "section": "Numeric and factor variables",
    "text": "Numeric and factor variables\n\nInstitution\n\ncols &lt;- c(\"ri_institution\", \"ri_institution_2\")\nget_values(tool_pilot, cols)\n\n[1] \"Baylor College of Medicine - BT House Calls\"\n[2] \"Johns Hopkins - JHOME\"                      \n[3] \"University of Alabama - UAB House Calls\"    \n[4] \"UT Southwestern - COVE\"                     \n[5] \"UTH Houston - LBJ House Calls\"              \n[6] \"UTH Houston - UT Physicians House Calls\"    \n\n\n\n# Numeric coding for character values in each column of interest\nvalue_labels &lt;- c(\n    \"Baylor College of Medicine - BT House Calls\" = 1, \n    \"Johns Hopkins - JHOME\" = 2, \n    \"UCSF - Care at Home Program\" = 3,\n    \"University of Alabama - UAB House Calls\" = 4, \n    \"UT Southwestern - COVE\" = 5, \n    \"UTH Houston - LBJ House Calls\" = 6,\n    \"UTH Houston - UT Physicians House Calls\" = 7\n)\n\n# NA values\nna_values &lt;- c()\n\n# Suffix for the version of each column with \"Don't Know\" and \"Refused\" changed\n# to NA.\nsuffix &lt;- \"7cat\"\n\n# Labels and levels for factors (Shouldn't need to change this code)\nfactor_labs_levs &lt;- value_labels[!value_labels %in% na_values]\n\n# Column names for the version of each column with \"Don't Know\" and \"Refused\" \n# changed to NA (Shouldn't need to change this code).\ncols_suffix &lt;- paste(cols, suffix, sep = \"_\")\n\n# Prepare columns for analysis\n# - Convert character values to numeric values\n# - Create a version of each column with \"Don't know\" and \"Refused\" converted to NA\n# - Create a factor version of each column (w/o \"Don't know\" and \"Refused\")\n# - Arrange the columns as: original column, numeric column w/o \"Don't know\" and \n#   \"Refused\", and the factor version of the column.\ntool_pilot &lt;- tool_pilot |&gt;\n  # Convert character values to numeric values\n  chars_to_nums(cols, value_labels) |&gt; \n  # Create a version of each column with \"Don't know\" and \"Refused\" converted to NA\n  nums_to_nas(cols, na_values, suffix) |&gt; \n  # Relocate new columns with NA values immediately after the original column\n  relocate_na_cols(cols, suffix) |&gt; \n  # Create a factor version of each column (w/o \"Don't know\" and \"Refused\")\n  factors(cols_suffix, factor_labs_levs) |&gt; \n  # Relocate factor columns immediately after the new columns with NA values\n  relocate_factors(cols_suffix) |&gt;\n  # Drop the original variable if the version with \"cat\" suffix has the exact\n  # same values.\n  drop_dup_orig(cols, cols_suffix)\n\n\ntool_pilot &lt;- tool_pilot %&gt;%\n  rename(calc_institution_7cat = calc_institution) %&gt;%\n  mutate(\n    calc_institution_7cat_f = factor(\n      calc_institution_7cat, levels = as.numeric(value_labels),\n      labels = names(value_labels)\n    )\n  ) %&gt;% relocate(calc_institution_7cat_f, .after = calc_institution_7cat)\n\n\n\nScreening items\n\ncols &lt;- c(\"ri_necessities\", \"ri_environment\", \"ri_caregiver\", \"ri_sedated\", \n          \"ri_isolated\", \"ri_anxious\", \"ri_prohibited\", \"ri_unmet_needs\", \n          \"ri_injuries\")\n\nget_values(tool_pilot, cols)\n\n[1] \"No\"               \"Unable to assess\" \"Yes\"             \n\n\n\n# Numeric coding for character values in each column of interest\nvalue_labels &lt;- c(\n    \"Yes\" = 1,\n    \"No\" = 0,\n    \"Unable to assess\" = 99\n)\n\n# NA values\nna_values &lt;- c()\n\n# Suffix for the version of each column with \"Don't Know\" and \"Refused\" changed\n# to NA.\nsuffix &lt;- \"3cat\"\n\n# Labels and levels for factors (Shouldn't need to change this code)\nfactor_labs_levs &lt;- value_labels[!value_labels %in% na_values]\n\n# Column names for the version of each column with \"Don't Know\" and \"Refused\" \n# changed to NA (Shouldn't need to change this code).\ncols_suffix &lt;- paste(cols, suffix, sep = \"_\")\n\n# Prepare columns for analysis\n# - Convert character values to numeric values\n# - Create a version of each column with \"Don't know\" and \"Refused\" converted to NA\n# - Create a factor version of each column (w/o \"Don't know\" and \"Refused\")\n# - Arrange the columns as: original column, numeric column w/o \"Don't know\" and \n#   \"Refused\", and the factor version of the column.\ntool_pilot &lt;- tool_pilot |&gt;\n  # Convert character values to numeric values\n  chars_to_nums(cols, value_labels) |&gt; \n  # Create a version of each column with \"Don't know\" and \"Refused\" converted to NA\n  nums_to_nas(cols, na_values, suffix) |&gt; \n  # Relocate new columns with NA values immediately after the original column\n  relocate_na_cols(cols, suffix) |&gt; \n  # Create a factor version of each column (w/o \"Don't know\" and \"Refused\")\n  factors(cols_suffix, factor_labs_levs) |&gt; \n  # Relocate factor columns immediately after the new columns with NA values\n  relocate_factors(cols_suffix) |&gt;\n  # Drop the original variable if the version with \"cat\" suffix has the exact\n  # same values.\n  drop_dup_orig(cols, cols_suffix)\n\n\n\nri_caregiver_un_reason\n\ncols &lt;- c(\"ri_caregiver_un_reason\")\n\nget_values(tool_pilot, cols)\n\n[1] \"Caregiver not present\"\n\n\n\n# Numeric coding for character values in each column of interest\nvalue_labels &lt;- c(\n    \"Caregiver not present\" = 1,\n    \"Other reason\" = 98\n)\n\n# NA values\nna_values &lt;- c()\n\n# Suffix for the version of each column with \"Don't Know\" and \"Refused\" changed\n# to NA.\nsuffix &lt;- \"2cat\"\n\n# Labels and levels for factors (Shouldn't need to change this code)\nfactor_labs_levs &lt;- value_labels[!value_labels %in% na_values]\n\n# Column names for the version of each column with \"Don't Know\" and \"Refused\" \n# changed to NA (Shouldn't need to change this code).\ncols_suffix &lt;- paste(cols, suffix, sep = \"_\")\n\n# Prepare columns for analysis\n# - Convert character values to numeric values\n# - Create a version of each column with \"Don't know\" and \"Refused\" converted to NA\n# - Create a factor version of each column (w/o \"Don't know\" and \"Refused\")\n# - Arrange the columns as: original column, numeric column w/o \"Don't know\" and \n#   \"Refused\", and the factor version of the column.\ntool_pilot &lt;- tool_pilot |&gt;\n  # Convert character values to numeric values\n  chars_to_nums(cols, value_labels) |&gt; \n  # Create a version of each column with \"Don't know\" and \"Refused\" converted to NA\n  nums_to_nas(cols, na_values, suffix) |&gt; \n  # Relocate new columns with NA values immediately after the original column\n  relocate_na_cols(cols, suffix) |&gt; \n  # Create a factor version of each column (w/o \"Don't know\" and \"Refused\")\n  factors(cols_suffix, factor_labs_levs) |&gt; \n  # Relocate factor columns immediately after the new columns with NA values\n  relocate_factors(cols_suffix) |&gt;\n  # Drop the original variable if the version with \"cat\" suffix has the exact\n  # same values.\n  drop_dup_orig(cols, cols_suffix)\n\n\n\nYes or No\n\ncols &lt;- c(\"suspect_em\", \"ri_report\", \"ri_refer_svcs\", \"ri_reflection\")\n\nget_values(tool_pilot, cols)\n\n[1] \"No\"  \"Yes\"\n\n\n\n# Numeric coding for character values in each column of interest\nvalue_labels &lt;- c(\n    \"Yes\" = 1,\n    \"No\" = 0\n)\n\n# NA values\nna_values &lt;- c()\n\n# Suffix for the version of each column with \"Don't Know\" and \"Refused\" changed\n# to NA.\nsuffix &lt;- \"2cat\"\n\n# Labels and levels for factors (Shouldn't need to change this code)\nfactor_labs_levs &lt;- value_labels[!value_labels %in% na_values]\n\n# Column names for the version of each column with \"Don't Know\" and \"Refused\" \n# changed to NA (Shouldn't need to change this code).\ncols_suffix &lt;- paste(cols, suffix, sep = \"_\")\n\n# Prepare columns for analysis\n# - Convert character values to numeric values\n# - Create a version of each column with \"Don't know\" and \"Refused\" converted to NA\n# - Create a factor version of each column (w/o \"Don't know\" and \"Refused\")\n# - Arrange the columns as: original column, numeric column w/o \"Don't know\" and \n#   \"Refused\", and the factor version of the column.\ntool_pilot &lt;- tool_pilot |&gt;\n  # Convert character values to numeric values\n  chars_to_nums(cols, value_labels) |&gt; \n  # Create a version of each column with \"Don't know\" and \"Refused\" converted to NA\n  nums_to_nas(cols, na_values, suffix) |&gt; \n  # Relocate new columns with NA values immediately after the original column\n  relocate_na_cols(cols, suffix) |&gt; \n  # Create a factor version of each column (w/o \"Don't know\" and \"Refused\")\n  factors(cols_suffix, factor_labs_levs) |&gt; \n  # Relocate factor columns immediately after the new columns with NA values\n  relocate_factors(cols_suffix) |&gt;\n  # Drop the original variable if the version with \"cat\" suffix has the exact\n  # same values.\n  drop_dup_orig(cols, cols_suffix)\n\n\n\nEM type\n\ncols &lt;- paste0(\"ri_em_type_\", c(1:7, 98, 99))\n\n### Change factor labels from \"checked\" and \"unchecked\" to \"Yes\" and \"No\"\ntool_pilot &lt;- tool_pilot %&gt;% \n  mutate(\n    across(\n      .cols = all_of(cols),\n      .fns = ~ case_when(\n        .x == \"Checked\" ~ \"Yes\",\n        .x == \"Unchecked\" ~ \"No\"\n      )\n    )\n  )\n\n\nget_values(tool_pilot, cols)\n\n[1] \"No\"  \"Yes\"\n\n\n\n# Numeric coding for character values in each column of interest\nvalue_labels &lt;- c(\n    \"Yes\" = 1,\n    \"No\" = 0\n)\n\n# NA values\nna_values &lt;- c()\n\n# Suffix for the version of each column with \"Don't Know\" and \"Refused\" changed\n# to NA.\nsuffix &lt;- \"2cat\"\n\n# Labels and levels for factors (Shouldn't need to change this code)\nfactor_labs_levs &lt;- value_labels[!value_labels %in% na_values]\n\n# Column names for the version of each column with \"Don't Know\" and \"Refused\" \n# changed to NA (Shouldn't need to change this code).\ncols_suffix &lt;- paste(cols, suffix, sep = \"_\")\n\n# Prepare columns for analysis\n# - Convert character values to numeric values\n# - Create a version of each column with \"Don't know\" and \"Refused\" converted to NA\n# - Create a factor version of each column (w/o \"Don't know\" and \"Refused\")\n# - Arrange the columns as: original column, numeric column w/o \"Don't know\" and \n#   \"Refused\", and the factor version of the column.\ntool_pilot &lt;- tool_pilot |&gt;\n  # Convert character values to numeric values\n  chars_to_nums(cols, value_labels) |&gt; \n  # Create a version of each column with \"Don't know\" and \"Refused\" converted to NA\n  nums_to_nas(cols, na_values, suffix) |&gt; \n  # Relocate new columns with NA values immediately after the original column\n  relocate_na_cols(cols, suffix) |&gt; \n  # Create a factor version of each column (w/o \"Don't know\" and \"Refused\")\n  factors(cols_suffix, factor_labs_levs) |&gt; \n  # Relocate factor columns immediately after the new columns with NA values\n  relocate_factors(cols_suffix) |&gt;\n  # Drop the original variable if the version with \"cat\" suffix has the exact\n  # same values.\n  drop_dup_orig(cols, cols_suffix)"
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html",
    "href": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html",
    "title": "Clinician Screening Tracker Data",
    "section": "",
    "text": "Total patients seen by clinicians: 8003 Total eligible appointments: 9121\nTotal screened appointments: 5210 Total screened patients that will be contacted for recruitment: 4863 Total recruited patients that will be interviewed: 180\nThe details for the variables created using this file are contained here: https://uthtmc.sharepoint.com/:w:/r/sites/SPHDETECT-RPC/Shared%20Documents/DETECT-RPC%20R61%20R33%202022/0_data_folders/02_dashboards/00_documentation/03_r33_dashboards_implementation_planning_notes.docx.docx?d=we1c72482657342aea35ede2de4e980a0&csf=1&web=1&e=nUY12K"
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#unique-mrns-and-dyad-ids",
    "href": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#unique-mrns-and-dyad-ids",
    "title": "Clinician Screening Tracker Data",
    "section": "Unique MRNs and Dyad IDs",
    "text": "Unique MRNs and Dyad IDs"
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#visit-dates",
    "href": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#visit-dates",
    "title": "Clinician Screening Tracker Data",
    "section": "Visit dates",
    "text": "Visit dates"
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#physician-and-clinics",
    "href": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#physician-and-clinics",
    "title": "Clinician Screening Tracker Data",
    "section": "Physician and clinics",
    "text": "Physician and clinics"
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#screened-assignments",
    "href": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#screened-assignments",
    "title": "Clinician Screening Tracker Data",
    "section": "Screened assignments",
    "text": "Screened assignments"
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#create-full-mock-data-set",
    "href": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#create-full-mock-data-set",
    "title": "Clinician Screening Tracker Data",
    "section": "Create full mock data set",
    "text": "Create full mock data set\n\nAdd ids, clinician data and appointment times\n\n\nAdd eligibility and screened status"
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#screened-patients-to-be-recruited",
    "href": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#screened-patients-to-be-recruited",
    "title": "Clinician Screening Tracker Data",
    "section": "Screened Patients to be Recruited",
    "text": "Screened Patients to be Recruited"
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#create-recruiter-ids",
    "href": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#create-recruiter-ids",
    "title": "Clinician Screening Tracker Data",
    "section": "Create recruiter IDs",
    "text": "Create recruiter IDs"
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#create-mock-data-for-each-call-log-variable",
    "href": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#create-mock-data-for-each-call-log-variable",
    "title": "Clinician Screening Tracker Data",
    "section": "Create mock data for each call log variable",
    "text": "Create mock data for each call log variable"
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#create-a-df-with-1800-unique-participants",
    "href": "data_management/mock_data_creation_and_analysis/01_mock_data_creation.html#create-a-df-with-1800-unique-participants",
    "title": "Clinician Screening Tracker Data",
    "section": "Create a df with 1800 unique participants",
    "text": "Create a df with 1800 unique participants\n\n360 is 20% of this\nEach participant in a previous call log was called an average of 1.7 times."
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/03_recruiter_scheduling_data_calc.html#split-the-date-time-variable",
    "href": "data_management/mock_data_creation_and_analysis/03_recruiter_scheduling_data_calc.html#split-the-date-time-variable",
    "title": "Load Packages",
    "section": "Split the date-time variable",
    "text": "Split the date-time variable"
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/03_recruiter_scheduling_data_calc.html#gift-card-data-gift-card-id-person-id-and-dyad-id",
    "href": "data_management/mock_data_creation_and_analysis/03_recruiter_scheduling_data_calc.html#gift-card-data-gift-card-id-person-id-and-dyad-id",
    "title": "Load Packages",
    "section": "Gift card data (Gift card ID, person ID and dyad ID)",
    "text": "Gift card data (Gift card ID, person ID and dyad ID)"
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/03_recruiter_scheduling_data_calc.html#join-to-gift-card-data",
    "href": "data_management/mock_data_creation_and_analysis/03_recruiter_scheduling_data_calc.html#join-to-gift-card-data",
    "title": "Load Packages",
    "section": "Join to Gift card Data",
    "text": "Join to Gift card Data"
  },
  {
    "objectID": "data_management/mock_data_creation_and_analysis/03_recruiter_scheduling_data_calc.html#create-column-of-the-overall-responses",
    "href": "data_management/mock_data_creation_and_analysis/03_recruiter_scheduling_data_calc.html#create-column-of-the-overall-responses",
    "title": "Load Packages",
    "section": "Create column of the overall responses",
    "text": "Create column of the overall responses"
  }
]
{
  "hash": "d9a2a93f155a539be4d4a1a0c63b0cbb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Create variables for visualizing the DETECT tool pilot study data\"\n---\n\n\n# Overview\n\nIn this file, we create some new variables that summarize the completion and missingness counts for various variables in the DETECT tool pilot study data. These new variables will used in creating interactive plots using the plotly package. \n\n\n# Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr, warn.conflicts = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'dplyr' was built under R version 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(readr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'readr' was built under R version 4.3.2\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'here' was built under R version 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(crosstalk)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'crosstalk' was built under R version 4.3.2\n```\n\n\n:::\n:::\n\n\n\n# Load data and custom functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt_data_path <- here::here(\"data\", \"detect_tool\", \"detect_tool_cleaned.RDS\")\ndt_data <- readRDS(dt_data_path)\nvar_desc <- readRDS(here::here(\"data_management\", \"detect_tool\", \n                               \"variable_descriptions.RDS\"))\naps_reports_data <- readRDS(here::here(\"data\", \"aps_reports\",\n                                    \"aps_reports_cleaned.RDS\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(here::here(\"r\", \"add_shade_column_x_rows.R\"))\n```\n:::\n\n\n\n# Select variables useful for the dashboard\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndash_vars <- c(\"record_id\", \"reporting_instrument_complete\", \"ri_timestamp_start\",\n               \"timestamp_end\", \"ri_patient_mrn\", \"calc_institution_7cat_f\", \n               \"ri_clinician_id\", \"ri_clinician_id_name\", \"ri_necessities_3cat_f\", \n               \"ri_environment_3cat_f\", \"ri_environment_un_reason\", \n               \"ri_caregiver_3cat_f\", \"ri_caregiver_un_reason_2cat_f\", \n               \"ri_caregiver_oth\", \"ri_sedated_3cat_f\", \"ri_isolated_3cat_f\", \n               \"ri_anxious_3cat_f\", \"ri_prohibited_3cat_f\", \n               \"ri_unmet_needs_3cat_f\", \"ri_injuries_3cat_f\", \n               \"ri_patient_assess\", \"suspect_em_2cat_f\", \"ri_em_no_reason\", \n               \"ri_em_reason\", \"ri_em_type_1_2cat_f\", \"ri_em_type_2_2cat_f\", \n               \"ri_em_type_3_2cat_f\", \"ri_em_type_4_2cat_f\", \"ri_em_type_5_2cat_f\", \n               \"ri_em_type_6_2cat_f\", \"ri_em_type_7_2cat_f\", \"ri_em_type_98_2cat_f\", \n               \"ri_em_type_99_2cat_f\", \"ri_em_type_other\", \"ri_report_2cat_f\", \n               \"ri_aps_no_reason\", \"ri_refer_svcs_2cat_f\", \n               \"ri_refer_svcs_specify\", \"ri_reflection_2cat_f\", \n               \"ri_reflection_notes\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nind_em_vars <- c(\"ri_necessities_3cat_f\", \"ri_environment_3cat_f\", \n                 \"ri_caregiver_3cat_f\", \"ri_sedated_3cat_f\", \n                 \"ri_isolated_3cat_f\", \"ri_anxious_3cat_f\", \n                 \"ri_prohibited_3cat_f\", \"ri_unmet_needs_3cat_f\", \n                 \"ri_injuries_3cat_f\")\n```\n:::\n\n\n# Missingness data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dt_data %>% select(all_of(dash_vars))\n```\n:::\n\n\n## Create fuction to generate missingness variables\n\nThis function will also take branching/ skip logic into consideration.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt_miss <- function(df, var, condition = NULL){\n  if(is.null(condition)){\n    new_df <- df %>% \n      mutate(\n        \"{var}_miss\" := case_when(\n          is.na(.data[[var]]) ~ 1,\n          TRUE ~ 0\n        )\n      )\n  }else if(!is.null(condition)){\n    new_df <- df %>%\n      mutate(\n         \"{var}_miss\" := case_when(\n           eval(parse(text = condition)) & is.na(.data[[var]]) ~ 1,\n           !(eval(parse(text = condition))) & is.na(.data[[var]]) ~ NA,\n           eval(parse(text = condition)) & !is.na(.data[[var]]) ~ 0\n        )       \n      )\n  }\n  \n  new_df %>% relocate(paste0(var, \"_miss\"), .after = var)\n}\n```\n:::\n\n\n## Variables with no conditional arguments/ skip logic\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvars <- c(\"ri_patient_mrn\", \"calc_institution_7cat_f\", \"ri_clinician_id_name\", \n          \"ri_necessities_3cat_f\", \"ri_environment_3cat_f\", \n          \"ri_caregiver_3cat_f\", \"ri_sedated_3cat_f\", \"ri_isolated_3cat_f\", \n          \"ri_anxious_3cat_f\", \"ri_prohibited_3cat_f\", \"ri_unmet_needs_3cat_f\", \n          \"ri_injuries_3cat_f\", \"suspect_em_2cat_f\", \"ri_reflection_2cat_f\"\n          )\ncondition <- NULL\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(var in vars){\n  missing_data <- dt_miss(df = missing_data, var = var, \n                     condition = condition)  \n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nâ„¹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %>% select(var)\n\n  # Now:\n  data %>% select(all_of(var))\n\nSee <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.\n```\n\n\n:::\n:::\n\n\n## Variables with conditional arguments/ skip logic\n\n### ri_environment_un_reason\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_environment_un_reason\"\n\ncondition_vars <- c(\"ri_necessities_3cat_f\", \"ri_environment_3cat_f\")\n\ncondition <- \"if_any(.cols = all_of(condition_vars), .fns = ~.x == 'Unable to assess')\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dt_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_caregiver_un_reason\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_caregiver_un_reason_2cat_f\"\ncondition <- \"ri_caregiver_3cat_f == 'Unable to assess'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dt_miss(df = missing_data, var = var, \n                   condition = condition) \n```\n:::\n\n\n### ri_caregiver_oth\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_caregiver_oth\"\ncondition <- \"ri_caregiver_un_reason_2cat_f == 'Other reason'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dt_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_patient_assess\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_patient_assess\"\n\ncondition_vars <- c(\"ri_sedated_3cat_f\", \"ri_isolated_3cat_f\",\n                    \"ri_anxious_3cat_f\", \"ri_prohibited_3cat_f\", \n                    \"ri_unmet_needs_3cat_f\", \"ri_injuries_3cat_f\")\n\ncondition <- \"if_any(.cols = all_of(condition_vars), .fns = ~.x == 'Unable to assess')\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dt_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_em_no_reason\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_em_no_reason\"\n\ncondition_vars <- c(\"ri_necessities_3cat_f\", \"ri_environment_3cat_f\",\n                    \"ri_caregiver_3cat_f\", \"ri_sedated_3cat_f\", \n                    \"ri_isolated_3cat_f\", \"ri_anxious_3cat_f\", \n                    \"ri_prohibited_3cat_f\", \"ri_unmet_needs_3cat_f\", \n                    \"ri_injuries_3cat_f\")\n\ncondition <- \"suspect_em_2cat_f == 'No' & if_any(.cols = all_of(condition_vars), \n.fns = ~.x == 'Yes')\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dt_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_em_reason\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_em_reason\"\n\ncondition_vars <- c(\"ri_necessities_3cat_f\", \"ri_environment_3cat_f\",\n                    \"ri_caregiver_3cat_f\", \"ri_sedated_3cat_f\", \n                    \"ri_isolated_3cat_f\", \"ri_anxious_3cat_f\", \n                    \"ri_prohibited_3cat_f\", \"ri_unmet_needs_3cat_f\", \n                    \"ri_injuries_3cat_f\")\n\ncondition <- \"suspect_em_2cat_f == 'Yes' & if_all(.cols = all_of(condition_vars), \n.fns = ~.x != 'Yes')\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dt_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### EM Type vars\n\n\n::: {.cell}\n\n```{.r .cell-code}\nem_type_vars <- c(\"ri_em_type_1_2cat_f\", \"ri_em_type_2_2cat_f\", \"ri_em_type_3_2cat_f\", \n          \"ri_em_type_4_2cat_f\", \"ri_em_type_5_2cat_f\", \"ri_em_type_6_2cat_f\", \n          \"ri_em_type_7_2cat_f\", \"ri_em_type_98_2cat_f\", \"ri_em_type_99_2cat_f\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- missing_data %>%\n  mutate(\n    ri_em_type_miss = case_when(\n      suspect_em_2cat_f == 'Yes' & \n        if_all(.cols = all_of(em_type_vars), \n               .fns = ~.x == \"No\") ~ 1,\n      suspect_em_2cat_f != 'Yes' & \n        if_all(.cols = all_of(em_type_vars), \n               .fns = ~.x == \"No\") ~ NA,\n      suspect_em_2cat_f == 'Yes' & \n        if_any(.cols = all_of(em_type_vars), \n               .fns = ~.x == \"Yes\") ~ 0      \n      )\n  )\n```\n:::\n\n\n### ri_em_type_other\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_em_type_other\"\ncondition <- \"ri_em_type_98_2cat_f == 'Checked'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dt_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_report_2cat_f\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_report_2cat_f\"\ncondition <- \"suspect_em_2cat_f == 'Yes'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dt_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_aps_no_reason\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_aps_no_reason\"\ncondition <- \"ri_report_2cat_f == 'No'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dt_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_refer_svcs_2cat_f\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_refer_svcs_2cat_f\"\ncondition <- \"suspect_em_2cat_f == 'Yes'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dt_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_refer_svcs_specify\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_refer_svcs_specify\"\ncondition <- \"ri_refer_svcs_2cat_f == 'Yes'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dt_miss(df = missing_data, var = var, \n                   condition = condition) \n```\n:::\n\n\n### ri_reflection_notes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_reflection_notes\"\ncondition <- \"ri_reflection_2cat_f == 'Yes'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dt_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n\n# Prepare Missingness data for visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlabel_order <- c(\n  \"Brief note\", \"Have helpful details\", \"Specify other service\", \n  \"Other service referral\", \"No intention to report to APS reason\", \n  \"Intend to report to APS\", \"Specific other mistreatment type suspected\", \n  \"EM type\", \"Suspect EM reason\", \n  \"Indicators observed but EM not suspected reason\", \n  \"Suspect EM\", \"Patient not assessed reason\", \n  \"Unexplained injuries\", \"Unmet needs\", \"Prohibited\", \"Anxious\", \"Isolated\", \n  \"Chemically sedated\", \"Other reason caregiver not assessed\", \n  \"Caregiver not assessed reason\", \"Defensive\", \n  \"Environment not assessed reason\", \"Environment health or safety concern\", \n  \"Absence of necessities \", \"Clinician name\", \"Institution\", \"Patient MRN\"\n)\n\n# Function for creating missing plot data for all and each institution\n\ncreate_missing_plot_data <- function(data){\n  data %>% \n    # Select only the record id and the missing data variables\n    select(record_id, ends_with(\"_miss\")) %>%\n    # Remove \"_miss\" suffix\n    rename_with(~gsub(\"_miss\", \"\", .x)) %>%\n    tidyr::pivot_longer(!record_id, names_to = \"var\", values_to = \"missingness\") %>%\n    # Recode missingness\n    mutate(\n      missingness_3cat_f = case_when(\n        missingness == 1 ~ \"Missing\",\n        missingness == 0 ~ \"Not missing\",\n        is.na(missingness) ~ \"Not applicable\"\n      ),\n      missingness_3cat_f = factor(missingness_3cat_f, \n                       levels = c(\"Missing\", \"Not missing\", \"Not applicable\"),\n                       exclude = NULL\n                       )\n    ) %>%\n    # Create count column\n    group_by(var, missingness_3cat_f) %>%\n    mutate(\n      count = n()\n    ) %>% ungroup() %>% \n    select(-c(record_id)) %>%\n    distinct() %>% \n    # Add labels\n    left_join(var_desc, by = c(\"var\" = \"variable\")) %>%\n    # Create label for aggregate variable \"ri_em_type\"\n    mutate(\n      label = case_when(\n        var == \"ri_em_type\" ~ \"EM type\",\n        TRUE ~ label\n      )\n    ) %>% \n    mutate(\n      # Ensure the correct order of labels is maintained in the plot\n      label = factor(label, levels = label_order)\n    )  \n}\n```\n:::\n\n\n## All\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_plot_data <- create_missing_plot_data(missing_data)\n```\n:::\n\n\n## Baylor\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbaylor_missing_plot_data <-  missing_data %>% \n  filter(calc_institution_7cat_f == \"Baylor College of Medicine - BT House Calls\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n## Johns Hopkins\n\n\n::: {.cell}\n\n```{.r .cell-code}\njh_missing_plot_data <-  missing_data %>% \n  filter(calc_institution_7cat_f == \"Johns Hopkins - JHOME\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n## UCSF\n\n\n::: {.cell}\n\n```{.r .cell-code}\nucsf_missing_plot_data <-  missing_data %>% \n  filter(calc_institution_7cat_f == \"UCSF - Care at Home Program\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n## UAB\n\n\n::: {.cell}\n\n```{.r .cell-code}\nuab_missing_plot_data <-  missing_data %>% \n  filter(calc_institution_7cat_f == \"University of Alabama - UAB House Calls\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n## UTSW\n\n\n::: {.cell}\n\n```{.r .cell-code}\nutsw_missing_plot_data <-  missing_data %>% \n  filter(calc_institution_7cat_f == \"UT Southwestern - COVE\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n## LBJ\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlbj_missing_plot_data <-  missing_data %>% \n  filter(calc_institution_7cat_f == \"UTH Houston - LBJ House Calls\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n## UTP\n\n\n::: {.cell}\n\n```{.r .cell-code}\nutp_missing_plot_data <-  missing_data %>% \n  filter(calc_institution_7cat_f == \"UTH Houston - UT Physicians House Calls\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n\n# Text box table data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntext_box_items <- c(\"ri_environment_un_reason\", \"ri_caregiver_oth\",\n                    \"ri_patient_assess\", \"ri_em_no_reason\", \"ri_em_reason\", \n                    \"ri_em_type_other\", \"ri_aps_no_reason\", \n                    \"ri_refer_svcs_specify\", \"ri_reflection_notes\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntext_box_table_data <- missing_data %>% \n  select(record_id, timestamp_end, calc_institution_7cat_f, \n         all_of(text_box_items)) %>%\n  tidyr::pivot_longer(cols = all_of(text_box_items), \n                      names_to = \"var\", values_to = \"content\") %>%\n  filter(!is.na(content)) %>% \n  # Add labels\n  left_join(var_desc, by = c(\"var\" = \"variable\")) %>% \n  select(-c(description, var)) %>%\n  relocate(label, .after = calc_institution_7cat_f) %>% distinct() %>%\n  mutate(\n    # Convert date-time variable to date variable\n    date = as.Date(timestamp_end),\n    # Make the record id and label columns factors to aid filtering\n    across(\n      .cols = c(record_id, label),\n      .fns = ~factor(.x)\n    )\n  ) %>% select(-c(timestamp_end)) %>%\n  relocate(date, .after = record_id)\n```\n:::\n\n\n\n# Univariate visuals data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_vars <- c(\"record_id\", \"calc_institution_7cat_f\", \"ri_necessities_3cat_f\", \n               \"ri_environment_3cat_f\", \"ri_environment_un_reason\", \n               \"ri_caregiver_3cat_f\", \"ri_caregiver_un_reason_2cat_f\", \n               \"ri_caregiver_oth\", \"ri_sedated_3cat_f\", \"ri_isolated_3cat_f\", \n               \"ri_anxious_3cat_f\", \"ri_prohibited_3cat_f\", \n               \"ri_unmet_needs_3cat_f\", \"ri_injuries_3cat_f\", \n               \"ri_patient_assess\", \"suspect_em_2cat_f\", \"ri_em_no_reason\", \n               \"ri_em_reason\", \"ri_em_type_1_2cat_f\", \"ri_em_type_2_2cat_f\", \n               \"ri_em_type_3_2cat_f\", \"ri_em_type_4_2cat_f\", \"ri_em_type_5_2cat_f\", \n               \"ri_em_type_6_2cat_f\", \"ri_em_type_7_2cat_f\", \"ri_em_type_98_2cat_f\", \n               \"ri_em_type_99_2cat_f\", \"ri_em_type_other\", \"ri_report_2cat_f\", \n               \"ri_aps_no_reason\", \"ri_refer_svcs_2cat_f\", \n               \"ri_refer_svcs_specify\", \"ri_reflection_2cat_f\", \n               \"ri_reflection_notes\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_data <- dt_data %>% select(all_of(plot_vars)) %>%\n  tidyr::pivot_longer(-c(record_id, calc_institution_7cat_f, suspect_em_2cat_f), \n                      names_to = \"var\", values_to = \"value\") %>%\n  # Add labels\n  left_join(var_desc, by = c(\"var\" = \"variable\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunivar_plot_data <- function(vars, level_list, labels_list){\n  plot_data %>% filter(var %in% vars) %>% select(-c(suspect_em_2cat_f)) %>%\n    mutate(\n      # Convert NA into a character value\n      value = case_when(is.na(value) ~ \"NA\",\n                        TRUE ~ value),\n      value = factor(value, \n                     levels = c(level_list, \"NA\"),\n                     exclude = NULL\n                     ),\n      # Ensure the order of labels in dataframe is maintained in the plot\n      label = factor(label, levels = rev(unique(labels_list)))\n    ) %>%\n    # Create proportions\n    reframe(\n    inst_count = n(), .by = c(calc_institution_7cat_f, label, value)\n    ) %>% \n    # Include counts for factor levels that have zero counts\n    group_by(calc_institution_7cat_f, label) %>%\n    tidyr::complete(value) %>%\n    ungroup() %>%\n    mutate(\n      inst_count = tidyr::replace_na(inst_count, 0)\n      ) %>%\n    # Calulate totals and proportions for each institution\n    mutate(\n      inst_total = sum(inst_count), .by = c(calc_institution_7cat_f, label),\n      inst_perc = paste0(format(round((inst_count/inst_total) *100, 1),\n                                nsmall = 1), \"%\")\n      ) %>%\n    # Calculate totals and proportions for all\n    mutate(\n      count = sum(inst_count), .by = c(label, value)\n      ) %>%\n    mutate(\n      total = sum(count), .by = c(calc_institution_7cat_f, label),\n      perc = paste0(format(round((count/total) *100, 1), nsmall = 1), \"%\")\n      )\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunivar_plot_data <- function(vars, level_list, labels_list){\n  plot_data %>% filter(var %in% vars) %>% select(-c(suspect_em_2cat_f)) %>%\n    mutate(\n      # Convert NA into a character value\n      value = case_when(is.na(value) ~ \"NA\",\n                        TRUE ~ value),\n      value = factor(value,\n                     levels = c(level_list, \"NA\"),\n                     exclude = NULL\n                     ),\n      # Ensure the order of labels in data frame is maintained in the plot\n      label = factor(label, levels = rev(unique(labels_list)))\n    ) %>%\n    # Create proportions\n    reframe(\n    inst_count = n(), .by = c(calc_institution_7cat_f, label, value)\n    ) %>%\n    # Include counts for factor levels that have zero counts\n    group_by(calc_institution_7cat_f, label) %>%\n    tidyr::complete(value) %>%\n    ungroup() %>%\n    mutate(\n      inst_count = tidyr::replace_na(inst_count, 0)\n      ) %>%\n    # Calulate totals and proportions for each institution\n    mutate(\n      inst_total = sum(inst_count), .by = c(calc_institution_7cat_f, label),\n      inst_perc = paste0(format(round((inst_count/inst_total) *100, 1),\n                                nsmall = 1), \"%\")\n      ) %>%\n    # Calculate totals and proportions for all\n    mutate(\n      count = sum(inst_count), .by = c(label, value)\n      ) %>%\n    mutate(\n      total = sum(count), .by = c(calc_institution_7cat_f, label),\n      perc = paste0(format(round((count/total) *100, 1), nsmall = 1), \"%\")\n      )\n}\n```\n:::\n\n\n## Indicators of abuse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nind_em_labs <- c(\n  \"Absence of necessities\", \"Environment health or safety concern\", \"Defensive\", \n  \"Chemically sedated\", \"Isolated\", \"Anxious\", \"Prohibited\", \"Unmet needs\",\n  \"Unexplained injuries\" \n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nind_em_plot_data <- univar_plot_data(ind_em_vars, \n                                        level_list = c(\"Yes\", \"No\", \n                                                       \"Unable to assess\"),\n                                     labels_list = ind_em_labs)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Overall data not grouped by institution\nind_em_plot_data_all <- ind_em_plot_data %>% select(-c(calc_institution_7cat_f, inst_count,\n                                            inst_perc, inst_total)) %>% \n  distinct()\n```\n:::\n\n\n## EM Type\n\n\n::: {.cell}\n\n```{.r .cell-code}\nem_type_labs <- c(\n  \"Self-neglect suspected\", \"Financial exploitation suspected\", \n  \"Emotional or psychological abuse suspected\", \"Physical abuse suspected\", \n  \"Sexual abuse suspected\", \"Caregiver neglect suspected\", \n  \"Abandonment suspected\", \"Other mistreatment type suspected\",\n  \"Dont know/ Not sure of mistreatment type\"\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nem_type_plot_data <- univar_plot_data(em_type_vars, \n                                        level_list = c(\"Yes\", \"No\"),\n                                      labels_list = em_type_labs)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Overall data not grouped by institution\nem_type_plot_data_all <- em_type_plot_data %>% select(-c(calc_institution_7cat_f, inst_count,\n                                            inst_perc, inst_total)) %>% \n  distinct()\n```\n:::\n\n\n### Counts for APS reports intended and made\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Intended reports\nreports_intended <- dt_data %>% select(ri_patient_mrn, calc_institution_7cat_f, \n                                          ri_report_2cat_f, timestamp_end) %>% \n  # Filter only rows where an intention to report was indicated\n  filter(ri_report_2cat_f == \"Yes\") %>%\n  # Standardize the MRN to remove trailing zeros at the beginning\n  mutate(\n    std_mrn = gsub(\"^0+\", \"\", ri_patient_mrn),\n    # ri_date does not always match the timestamp variable so make a new date \n    # variable based on the ending timestamp\n    end_date = as.Date(timestamp_end)\n  ) %>% relocate(std_mrn, .after = ri_patient_mrn) \n\n# Date range\nstart_date <- min(as.Date(dt_data$ri_timestamp_start))\nend_date <- max(as.Date(dt_data$timestamp_end))\n\n# Reports made\nintended_reports_made <- aps_reports_data %>% \n  select(ar_mrn, ar_encounter_date) %>%\n  filter(between(as.Date(ar_encounter_date), start_date, end_date)) %>% \n  # Standardize the MRN to remove trailing zeros at the beginning\n  mutate(\n    std_mrn = gsub(\"^0+\", \"\", ar_mrn)\n  ) %>% relocate(std_mrn, .after = ar_mrn) %>%\n  right_join(reports_intended, \n             by = c(\"ar_encounter_date\" = \"end_date\", \"std_mrn\"))\n```\n:::\n\n\n\n# Bivariate visuals data\n\nGroup by Suspect EM\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbivar_plot_data <- function(vars, level_list, labels_list){\n  plot_data %>% filter(var %in% vars) %>%\n    mutate(\n      # Convert NA into a character value\n      value = case_when(is.na(value) ~ \"NA\",\n                        TRUE ~ value),\n      value = factor(value, \n                     levels = c(level_list, \"NA\"),\n                     exclude = NULL\n                     ),\n      # Ensure the order of labels in dataframe is maintained in the plot\n      label = factor(label, levels = rev(unique(label)))\n    ) %>%\n    # Create proportions\n    reframe(\n    inst_count = n(), \n    .by = c(calc_institution_7cat_f, suspect_em_2cat_f, label, value)\n    ) %>% \n    # Include counts for factor levels that have zero counts\n    group_by(calc_institution_7cat_f, suspect_em_2cat_f, label) %>%\n    tidyr::complete(value) %>%\n    ungroup() %>%\n    mutate(\n      inst_count = tidyr::replace_na(inst_count, 0)\n      ) %>%\n    # Calulate totals and proportions for each institution\n    mutate(\n      inst_total = sum(inst_count), .by = c(calc_institution_7cat_f, \n                                            suspect_em_2cat_f, label),\n      inst_perc = (inst_count/inst_total) *100,\n      inst_perc_label = paste0(format(round(inst_perc, 1), nsmall = 1), \"%\")\n      ) %>%\n    # Calulate totals and proportions for all\n    mutate(\n      count = sum(inst_count), .by = c(suspect_em_2cat_f, label, value)\n      ) %>%\n    mutate(\n      total = sum(count), .by = c(calc_institution_7cat_f, suspect_em_2cat_f,\n                                  label),\n      perc = (count/total) *100, \n      perc_label = paste0(format(round(perc, 1), nsmall = 1), \"%\")\n      ) %>% select(-c(total, inst_total))\n}\n```\n:::\n\n\n## Indicators of EM Module and Suspect EM\n\n\n::: {.cell}\n\n```{.r .cell-code}\nind_sus_em_plot_data <- bivar_plot_data(ind_em_vars, \n                                        level_list = c(\"Yes\", \"No\", \n                                                       \"Unable to assess\"),\n                                        labels_list = ind_em_labs\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Overall data for plot not grouped by institution\nind_sus_em_plot_data_all <- ind_sus_em_plot_data %>% \n  select(-c(calc_institution_7cat_f, inst_count, inst_perc, inst_perc_label)\n         ) %>% \n  distinct()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Overall data for table not grouped by institution\nind_sus_em_table_data_all <- ind_sus_em_plot_data_all %>%\n  select(-c(perc)) %>%\n  mutate(\n    label = factor(label, levels = ind_em_labs)\n  ) %>% arrange(label) %>%\n  # Add shade column\n  add_shade_column_x_rows(., 4)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data for tables grouped by institution\nind_sus_em_table_data <- ind_sus_em_plot_data %>%\n  select(-c(count, perc, perc_label, inst_perc)) %>% \n  # Arrange df by levels of indicators em label variable\n  mutate(\n    label = factor(label, levels = ind_em_labs)\n  ) %>% arrange(label)\n```\n:::\n\n\n## Suspect EM and EM Type\n\n\n::: {.cell}\n\n```{.r .cell-code}\nem_type_labs <- c( \"Self-neglect suspected\", \"Financial exploitation suspected\", \n                   \"Emotional or psychological abuse suspected\", \n                   \"Physical abuse suspected\",  \"Sexual abuse suspected\", \n                   \"Caregiver neglect suspected\", \"Abandonment suspected\", \n                   \"Other mistreatment type suspected\", \n                   \"Dont know/ Not sure of mistreatment type\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsus_type_em_plot_data <- bivar_plot_data(em_type_vars, level_list = c(\"Yes\", \"No\"),\n                                        labels_list = em_type_labs) %>%\n  filter(suspect_em_2cat_f == \"Yes\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Overall data for plot not grouped by institution\nsus_type_em_plot_data_all <- sus_type_em_plot_data %>% \n  select(-c(calc_institution_7cat_f, inst_count, inst_perc, inst_perc_label)\n         ) %>% \n  distinct()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Overall data for table not grouped by institution\nsus_type_em_table_data_all <- sus_type_em_plot_data_all %>%\n  select(-c(perc)) %>% \n  mutate(\n    label = factor(label, levels = em_type_labs)\n  ) %>% arrange(label) %>%\n  # Add shade column\n  add_shade_column_x_rows(., 3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data for tables grouped by institution\nsus_type_em_table_data <- sus_type_em_plot_data %>%\n  select(-c(count, perc, perc_label, inst_perc)) %>%  \n  # Arrange df by levels of indicators em label variable\n  mutate(\n    label = factor(label, levels = em_type_labs)\n  ) %>% arrange(label)\n```\n:::\n\n\n\n# Save data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npath <- here::here(\"data\", \"detect_tool\", \"dashboard_prepped_data.RData\")\nsave(dt_data, missing_plot_data, baylor_missing_plot_data, jh_missing_plot_data,\n     ucsf_missing_plot_data, uab_missing_plot_data, utsw_missing_plot_data,\n     lbj_missing_plot_data, utp_missing_plot_data, text_box_table_data, \n     ind_em_plot_data, ind_em_plot_data_all, em_type_plot_data, \n     em_type_plot_data_all, reports_intended, intended_reports_made, \n     ind_sus_em_plot_data, ind_sus_em_plot_data_all, ind_sus_em_table_data_all, \n     ind_sus_em_table_data, sus_type_em_plot_data, sus_type_em_plot_data_all,\n     sus_type_em_table_data_all, sus_type_em_table_data, \n     file = path)\n\nrm(list = ls())\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
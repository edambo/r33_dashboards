{
  "hash": "7721ef27b52c715e6831e0d121ee4b67",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Create variables for visualizing the DETECT tool pilot study data\"\n---\n\n\n# Overview\n\nIn this file, we create some new variables that summarize the completion and missingness counts for various variables in the DETECT tool pilot study data. These new variables will used in creating interactive plots using the plotly package. \n\n\n# Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr, warn.conflicts = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'dplyr' was built under R version 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(readr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'readr' was built under R version 4.3.2\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'here' was built under R version 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(crosstalk)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'crosstalk' was built under R version 4.3.2\n```\n\n\n:::\n:::\n\n\n\n# Load data and custom functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\npilot_data <- readRDS(here::here(\"data\", \"detect_tool_pilot\",\n                                 \"detect_tool_pilot.RDS\"))\nvar_desc <- readRDS(here::here(\"data\", \"detect_tool_pilot\",\n                               \"detect_tool_pilot_variable_descriptions.RDS\"))\naps_reports_data <- read.csv(here::here(\"data\",\n                                    \"aps_report_data.csv\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(here::here(\"r\", \"add_shade_column_x_rows.R\"))\n```\n:::\n\n\n\n# Select variables useful for the dashboard\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndash_vars <- c(\"record_id\", \"reporting_instrument_complete\", \"ri_date\", \n               \"ri_patient_mrn\", \"ri_institution_7cat_f\", \"ri_clinician_id\", \n               \"ri_clinician_id_name\", \"ri_necessities_3cat_f\", \n               \"ri_environment_3cat_f\", \"ri_environment_un_reason\", \n               \"ri_caregiver_3cat_f\", \"ri_caregiver_un_reason_2cat_f\", \n               \"ri_caregiver_oth\", \"ri_sedated_3cat_f\", \"ri_isolated_3cat_f\", \n               \"ri_anxious_3cat_f\", \"ri_prohibited_3cat_f\", \n               \"ri_unmet_needs_3cat_f\", \"ri_injuries_3cat_f\", \n               \"ri_patient_assess\", \"suspect_em_2cat_f\", \"ri_em_no_reason\", \n               \"ri_em_reason\", \"ri_em_type_1_2cat_f\", \"ri_em_type_2_2cat_f\", \n               \"ri_em_type_3_2cat_f\", \"ri_em_type_4_2cat_f\", \"ri_em_type_5_2cat_f\", \n               \"ri_em_type_6_2cat_f\", \"ri_em_type_7_2cat_f\", \"ri_em_type_98_2cat_f\", \n               \"ri_em_type_99_2cat_f\", \"ri_em_type_other\", \"ri_report_2cat_f\", \n               \"ri_aps_no_reason\", \"ri_refer_svcs_2cat_f\", \n               \"ri_refer_svcs_specify\", \"ri_reflection_2cat_f\", \n               \"ri_reflection_notes\")\n\ndash_data <- pilot_data %>% select(all_of(dash_vars))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nind_em_vars <- c(\"ri_necessities_3cat_f\", \"ri_environment_3cat_f\", \n                 \"ri_caregiver_3cat_f\", \"ri_sedated_3cat_f\", \n                 \"ri_isolated_3cat_f\", \"ri_anxious_3cat_f\", \n                 \"ri_prohibited_3cat_f\", \"ri_unmet_needs_3cat_f\", \n                 \"ri_injuries_3cat_f\")\n```\n:::\n\n\n# Missingness data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- dash_data\n```\n:::\n\n\n## Create fuction to generate missingness variables\n\nThis function will also take branching/ skip logic into consideration.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npilot_miss <- function(df, var, condition = NULL){\n  if(is.null(condition)){\n    new_df <- df %>% \n      mutate(\n        \"{var}_miss\" := case_when(\n          is.na(.data[[var]]) ~ 1,\n          TRUE ~ 0\n        )\n      )\n  }else if(!is.null(condition)){\n    new_df <- df %>%\n      mutate(\n         \"{var}_miss\" := case_when(\n           eval(parse(text = condition)) & is.na(.data[[var]]) ~ 1,\n           !(eval(parse(text = condition))) & is.na(.data[[var]]) ~ NA,\n           eval(parse(text = condition)) & !is.na(.data[[var]]) ~ 0\n        )       \n      )\n  }\n  \n  new_df %>% relocate(paste0(var, \"_miss\"), .after = var)\n}\n```\n:::\n\n\n## Variables with no conditional arguments/ skip logic\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvars <- c(\"ri_patient_mrn\", \"ri_institution_7cat_f\", \"ri_clinician_id_name\", \n          \"ri_necessities_3cat_f\", \"ri_environment_3cat_f\", \n          \"ri_caregiver_3cat_f\", \"ri_sedated_3cat_f\", \"ri_isolated_3cat_f\", \n          \"ri_anxious_3cat_f\", \"ri_prohibited_3cat_f\", \"ri_unmet_needs_3cat_f\", \n          \"ri_injuries_3cat_f\", \"suspect_em_2cat_f\", \"ri_reflection_2cat_f\"\n          )\ncondition <- NULL\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(var in vars){\n  missing_data <- pilot_miss(df = missing_data, var = var, \n                     condition = condition)  \n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nâ„¹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %>% select(var)\n\n  # Now:\n  data %>% select(all_of(var))\n\nSee <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.\n```\n\n\n:::\n:::\n\n\n## Variables with conditional arguments/ skip logic\n\n### ri_environment_un_reason\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_environment_un_reason\"\n\ncondition_vars <- c(\"ri_necessities_3cat_f\", \"ri_environment_3cat_f\")\n\ncondition <- \"if_any(.cols = all_of(condition_vars), .fns = ~.x == 'Unable to assess')\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_caregiver_un_reason\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_caregiver_un_reason_2cat_f\"\ncondition <- \"ri_caregiver_3cat_f == 'Unable to assess'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- pilot_miss(df = missing_data, var = var, \n                   condition = condition) \n```\n:::\n\n\n### ri_caregiver_oth\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_caregiver_oth\"\ncondition <- \"ri_caregiver_un_reason_2cat_f == 'Other reason'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_patient_assess\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_patient_assess\"\n\ncondition_vars <- c(\"ri_sedated_3cat_f\", \"ri_isolated_3cat_f\",\n                    \"ri_anxious_3cat_f\", \"ri_prohibited_3cat_f\", \n                    \"ri_unmet_needs_3cat_f\", \"ri_injuries_3cat_f\")\n\ncondition <- \"if_any(.cols = all_of(condition_vars), .fns = ~.x == 'Unable to assess')\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_em_no_reason\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_em_no_reason\"\n\ncondition_vars <- c(\"ri_necessities_3cat_f\", \"ri_environment_3cat_f\",\n                    \"ri_caregiver_3cat_f\", \"ri_sedated_3cat_f\", \n                    \"ri_isolated_3cat_f\", \"ri_anxious_3cat_f\", \n                    \"ri_prohibited_3cat_f\", \"ri_unmet_needs_3cat_f\", \n                    \"ri_injuries_3cat_f\")\n\ncondition <- \"suspect_em_2cat_f == 'No' & if_any(.cols = all_of(condition_vars), \n.fns = ~.x == 'Yes')\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_em_reason\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_em_reason\"\n\ncondition_vars <- c(\"ri_necessities_3cat_f\", \"ri_environment_3cat_f\",\n                    \"ri_caregiver_3cat_f\", \"ri_sedated_3cat_f\", \n                    \"ri_isolated_3cat_f\", \"ri_anxious_3cat_f\", \n                    \"ri_prohibited_3cat_f\", \"ri_unmet_needs_3cat_f\", \n                    \"ri_injuries_3cat_f\")\n\ncondition <- \"suspect_em_2cat_f == 'Yes' & if_all(.cols = all_of(condition_vars), \n.fns = ~.x != 'Yes')\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### EM Type vars\n\n\n::: {.cell}\n\n```{.r .cell-code}\nem_type_vars <- c(\"ri_em_type_1_2cat_f\", \"ri_em_type_2_2cat_f\", \"ri_em_type_3_2cat_f\", \n          \"ri_em_type_4_2cat_f\", \"ri_em_type_5_2cat_f\", \"ri_em_type_6_2cat_f\", \n          \"ri_em_type_7_2cat_f\", \"ri_em_type_98_2cat_f\", \"ri_em_type_99_2cat_f\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- missing_data %>%\n  mutate(\n    ri_em_type_miss = case_when(\n      suspect_em_2cat_f == 'Yes' & \n        if_all(.cols = all_of(em_type_vars), \n               .fns = ~.x == \"No\") ~ 1,\n      suspect_em_2cat_f != 'Yes' & \n        if_all(.cols = all_of(em_type_vars), \n               .fns = ~.x == \"No\") ~ NA,\n      suspect_em_2cat_f == 'Yes' & \n        if_any(.cols = all_of(em_type_vars), \n               .fns = ~.x == \"Yes\") ~ 0      \n      )\n  )\n```\n:::\n\n\n### ri_em_type_other\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_em_type_other\"\ncondition <- \"ri_em_type_98_2cat_f == 'Checked'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_report_2cat_f\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_report_2cat_f\"\ncondition <- \"suspect_em_2cat_f == 'Yes'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_aps_no_reason\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_aps_no_reason\"\ncondition <- \"ri_report_2cat_f == 'No'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_refer_svcs_2cat_f\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_refer_svcs_2cat_f\"\ncondition <- \"suspect_em_2cat_f == 'Yes'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n### ri_refer_svcs_specify\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_refer_svcs_specify\"\ncondition <- \"ri_refer_svcs_2cat_f == 'Yes'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- pilot_miss(df = missing_data, var = var, \n                   condition = condition) \n```\n:::\n\n\n### ri_reflection_notes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar <- \"ri_reflection_notes\"\ncondition <- \"ri_reflection_2cat_f == 'Yes'\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_data <- pilot_miss(df = missing_data, var = var, \n                   condition = condition)\n```\n:::\n\n\n\n# Prepare Missingness data for visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlabel_order <- c(\n  \"Brief note\", \"Have helpful details\", \"Specify other service\", \n  \"Other service referral\", \"No intention to report to APS reason\", \n  \"Intend to report to APS\", \"Specific other mistreatment type suspected\", \n  \"EM type\", \"Suspect EM reason\", \n  \"Indicators observed but EM not suspected reason\", \n  \"Suspect EM\", \"Patient not assessed reason\", \n  \"Unexplained injuries\", \"Unmet needs\", \"Prohibited\", \"Anxious\", \"Isolated\", \n  \"Chemically sedated\", \"Other reason caregiver not assessed\", \n  \"Caregiver not assessed reason\", \"Defensive\", \n  \"Environment not assessed reason\", \"Environment health or safety concern\", \n  \"Absence of necessities \", \"Clinician name\", \"Institution\", \"Patient MRN\"\n)\n\n# Function for creating missing plot data for all and each institution\n\ncreate_missing_plot_data <- function(data){\n  data %>% \n    # Select only the record id and the missng data variables\n    select(record_id, ends_with(\"_miss\")) %>%\n    # Remove \"_miss\" suffix\n    rename_with(~gsub(\"_miss\", \"\", .x)) %>%\n    tidyr::pivot_longer(!record_id, names_to = \"var\", values_to = \"missingness\") %>%\n    # Recode missingness\n    mutate(\n      missingness_3cat_f = case_when(\n        missingness == 1 ~ \"Missing\",\n        missingness == 0 ~ \"Not missing\",\n        is.na(missingness) ~ \"Not applicable\"\n      ),\n      missingness_3cat_f = factor(missingness_3cat_f, \n                       levels = c(\"Missing\", \"Not missing\", \"Not applicable\")\n                       )\n    ) %>%\n    # Create count column\n    group_by(var, missingness_3cat_f) %>%\n    mutate(\n      count = n()\n    ) %>% ungroup() %>% \n    select(-c(record_id)) %>%\n    distinct() %>% \n    # Add labels\n    left_join(var_desc, by = c(\"var\" = \"variable\")) %>%\n    # Create label for aggregate variable \"ri_em_type\"\n    mutate(\n      label = case_when(\n        var == \"ri_em_type\" ~ \"EM type\",\n        TRUE ~ label\n      )\n    ) %>% \n    mutate(\n      # Ensure the correct order of labels is maintained in the plot\n      label = factor(label, levels = label_order)\n    )  \n}\n```\n:::\n\n\n## All\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_plot_data <- create_missing_plot_data(missing_data)\n```\n:::\n\n\n## Baylor\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbaylor_missing_plot_data <-  missing_data %>% \n  filter(ri_institution_7cat_f == \"Baylor College of Medicine - BT House Calls\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n## Johns Hopkins\n\n\n::: {.cell}\n\n```{.r .cell-code}\njh_missing_plot_data <-  missing_data %>% \n  filter(ri_institution_7cat_f == \"Johns Hopkins - JHOME\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n## UCSF\n\n\n::: {.cell}\n\n```{.r .cell-code}\nucsf_missing_plot_data <-  missing_data %>% \n  filter(ri_institution_7cat_f == \"UCSF - Care at Home Program\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n## UAB\n\n\n::: {.cell}\n\n```{.r .cell-code}\nuab_missing_plot_data <-  missing_data %>% \n  filter(ri_institution_7cat_f == \"University of Alabama - UAB House Calls\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n## UTSW\n\n\n::: {.cell}\n\n```{.r .cell-code}\nutsw_missing_plot_data <-  missing_data %>% \n  filter(ri_institution_7cat_f == \"UT Southwestern - COVE\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n## LBJ\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlbj_missing_plot_data <-  missing_data %>% \n  filter(ri_institution_7cat_f == \"UTH Houston - LBJ House Calls\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n## UTP\n\n\n::: {.cell}\n\n```{.r .cell-code}\nutp_missing_plot_data <-  missing_data %>% \n  filter(ri_institution_7cat_f == \"UTH Houston - UT Physicians House Calls\") %>%\n  create_missing_plot_data()\n```\n:::\n\n\n# Text box table data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntext_box_items <- c(\"ri_environment_un_reason\", \"ri_caregiver_oth\",\n                    \"ri_patient_assess\", \"ri_em_no_reason\", \"ri_em_reason\", \n                    \"ri_em_type_other\", \"ri_aps_no_reason\", \n                    \"ri_refer_svcs_specify\", \"ri_reflection_notes\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntext_box_table_data <- missing_data %>% \n  select(record_id, ri_date, ri_institution_7cat_f, all_of(text_box_items)) %>%\n  tidyr::pivot_longer(cols = all_of(text_box_items), \n                      names_to = \"var\", values_to = \"content\") %>%\n  filter(!is.na(content)) %>% \n  # Add labels\n  left_join(var_desc, by = c(\"var\" = \"variable\")) %>% \n  select(-c(description, var)) %>%\n  relocate(label, .after = ri_institution_7cat_f) %>% distinct() %>%\n  # Make the record id and label columns factors to aid filtering\n  mutate(\n    across(\n      .cols = c(record_id, label),\n      .fns = ~factor(.x)\n    )\n  )\n```\n:::\n\n\n\n# Univariate visuals data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshared_plot_data <- dash_data %>% \n  select(-c(reporting_instrument_complete, ri_date, ri_patient_mrn)) %>%\n  tidyr::pivot_longer(-c(record_id, ri_institution_7cat_f, ri_clinician_id), \n                      names_to = \"var\", values_to = \"value\") %>%\n  # Add labels\n  left_join(var_desc, by = c(\"var\" = \"variable\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function for creating data subsets\ndata_subset <- function(vars, level_list){\n  df <- shared_plot_data %>% filter(var %in% vars) %>%\n    mutate(\n      # Convert NA into a character value\n      value = case_when(is.na(value) ~ \"NA\",\n                        TRUE ~ value),\n      value = factor(value, \n                     levels = c(level_list, \"NA\"),\n                     exclude = NULL\n                     ),\n      # Ensure the order of labels in dataframe is maintained in the plot\n      label = factor(label, levels = rev(unique(label)))\n    )\n}\n```\n:::\n\n\n## Indicators of abuse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nind_em_plot_data <- data_subset(ind_em_vars, \n                                        level_list = c(\"Yes\", \"No\", \n                                                       \"Unable to assess\"))\n```\n:::\n\n\n## Suspect EM\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuspect_em_plot_data <- data_subset(\"suspect_em_2cat_f\", \n                                        level_list = c(\"Yes\", \"No\"))\n```\n:::\n\n\n## EM Type\n\n\n::: {.cell}\n\n```{.r .cell-code}\nem_type_plot_data <- data_subset(em_type_vars, \n                                        level_list = c(\"Yes\", \"No\"))\n```\n:::\n\n\n## Intent to Report to APS\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreport_plot_data <- dash_data %>% \n  select(record_id, ri_institution_7cat_f, ri_clinician_id, suspect_em_2cat_f,\n         ri_report_2cat_f) %>%\n  tidyr::pivot_longer(ri_report_2cat_f, \n                      names_to = \"var\", values_to = \"value\") %>% \n  # Add labels\n  left_join(var_desc, by = c(\"var\" = \"variable\"))  %>%\n    mutate(\n      # Convert NA into a character value\n      # Distinguish between true NA and EM not suspected\n      value = case_when(is.na(value) & suspect_em_2cat_f == \"Yes\" ~ \"NA\",\n                        is.na(value) & \n                          suspect_em_2cat_f != \"Yes\" ~ \"EM not suspected\",\n                        TRUE ~ value),\n      value = factor(value, \n                     levels = c(\"Yes\", \"No\", \"EM not suspected\", \"NA\"),\n                     exclude = NULL\n                     ),\n      # Ensure the order of labels in dataframe is maintained in the plot\n      label = factor(label, levels = rev(unique(label)))\n    )\n```\n:::\n\n\n### Counts for APS reports intended and made\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstitution_long_lat <- data.frame(\n  institution = c(\n    \"Baylor College of Medicine - BT House Calls\",  \"Johns Hopkins - JHOME\", \n    \"UCSF - Care at Home Program\", \"University of Alabama - UAB House Calls\",\n    \"UT Southwestern - COVE\", \"UTH Houston\"\n  ),\n  longitude = c(29.71052761800321, 39.33008377311541, 37.7669884176172, \n                33.502461653045216, 32.815820023948795, 29.703289163249107),\n  latitude = c(-95.39623789990478, -76.62051772290135, -122.45905392951434,\n               -86.80513736700209, -96.8448134037558, -95.40319950387807)\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Intended reports\nreports_intended <- dash_data %>% select(ri_patient_mrn, ri_institution_7cat_f, \n                                          ri_report_2cat_f) %>% \n  # Exclude fake patient\n  filter(ri_patient_mrn != \"Julia_Test_Patient1\") %>%\n  # Filter only rows where an intention to report was indicated\n  filter(ri_report_2cat_f == \"Yes\") %>%\n  # Standardize the MRN to remove trailing zeros at the beginning\n  mutate(\n    std_mrn = gsub(\"^0+\", \"\", ri_patient_mrn)\n  ) %>% relocate(std_mrn, .after = ri_patient_mrn) \n\n# Date range\nstart_date <- min(as.Date(dash_data$ri_date))\nend_date <- max(as.Date(dash_data$ri_date))\n\n# Reports made\nreports_made <- aps_reports_data %>% \n  filter(between(as.Date(ar_encounter_date), start_date, end_date)) %>% \n  # Standardize the MRN to remove trailing zeros at the beginning\n  mutate(\n    std_mrn = gsub(\"^0+\", \"\", ar_mrn)\n  ) %>% relocate(std_mrn, .after = ar_mrn) %>%\n  filter(std_mrn %in% reports_intended$std_mrn) %>% nrow()\n\nreports_intended <- reports_intended %>% nrow()\n```\n:::\n\n\n\n# Bivariate visuals data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Number of cases where EM was suspected\nsuspect_em_no <- dash_data %>% filter(suspect_em_2cat_f == \"Yes\") %>% nrow()\n\n# Number of cases where EM was not suspected\nnot_suspect_em_no <- dash_data %>% filter(suspect_em_2cat_f == \"No\") %>% nrow()\n```\n:::\n\n\n## Indicators of EM Module and Suspect EM\n\n\n::: {.cell}\n\n```{.r .cell-code}\nind_em_labs <- c(\n  \"Unmet needs\", \"Unexplained injuries\", \"Prohibited\", \"Isolated\", \n  \"Environment health or safety\\nconcern\", \"Defensive\", \"Chemically sedated\",\n  \"Anxious\", \"Absence of necessities\"\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Character vector of filters\nind_sus_em_plot_data <- dash_data %>% \n  select(record_id, all_of(ind_em_vars), suspect_em_2cat_f) %>%\n  tidyr::pivot_longer(all_of(ind_em_vars), \n                      names_to = \"em_ind_var\", values_to = \"em_ind_value\") %>%\n  # Add labels\n  left_join(var_desc, by = c(\"em_ind_var\" = \"variable\")) %>%\n  rename(\n    \"ind_em_label\" = \"label\"\n  ) %>%\n  mutate(\n    # Include line breaks in labels\n    ind_em_label = stringr::str_wrap(ind_em_label, width = 30),\n    ind_em_label = factor(ind_em_label),\n    # Convert NA into a character value\n    em_ind_value = case_when(is.na(em_ind_value) ~ \"NA\",\n                      TRUE ~ em_ind_value),\n    em_ind_value = factor(em_ind_value, \n                   levels = c(\"Yes\", \"No\", \"Unable to assess\", \"NA\"),\n                   exclude = NULL\n                   )\n  ) %>%\n  # Replace the EM indicator variable name column with the labels\n  relocate(ind_em_label, .after = suspect_em_2cat_f) %>%\n  select(-c(description, em_ind_var)) %>%\n  reframe(\n    count = n(), .by = c(suspect_em_2cat_f,ind_em_label, em_ind_value)\n  ) %>%   \n  # Include counts for factor levels that have zero counts\n  group_by(suspect_em_2cat_f, ind_em_label) %>%\n  tidyr::complete(em_ind_value) %>%\n  ungroup() %>%\n  mutate(\n    count = tidyr::replace_na(count, 0),\n    perc = case_when(\n      suspect_em_2cat_f == \"Yes\" ~ (count/suspect_em_no) *100,\n      suspect_em_2cat_f == \"No\" ~ (count/not_suspect_em_no) *100\n      ),\n    perc_label = paste0(format(round(perc, 1), nsmall = 1), \"%\")\n    )  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nind_sus_em_table_data <- ind_sus_em_plot_data %>%\n  select(-c(perc)) %>%\n  mutate(\n    ind_em_label = factor(ind_em_label, levels = ind_em_labs)\n  ) %>% arrange(ind_em_label)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nind_sus_em_table_data <- add_shade_column_x_rows(ind_sus_em_table_data, 4)\n```\n:::\n\n\n## Suspect EM and EM Type\n\n\n::: {.cell}\n\n```{.r .cell-code}\nem_type_labs <- c( \"Self-neglect suspected\", \"Financial exploitation suspected\", \n                   \"Emotional or psychological abuse suspected\", \n                   \"Physical abuse suspected\",  \"Sexual abuse suspected\", \n                   \"Caregiver neglect suspected\", \"Abandonment suspected\", \n                   \"Other mistreatment type suspected\", \n                   \"Dont know/ Not sure of mistreatment type\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsus_type_em_plot_data <- dash_data %>%\n  select(record_id, suspect_em_2cat_f, all_of(em_type_vars)) %>%\n  tidyr::pivot_longer(all_of(em_type_vars), \n                      names_to = \"em_type_var\", values_to = \"em_type_value\") %>%\n  # Add labels\n  left_join(var_desc, by = c(\"em_type_var\" = \"variable\")) %>%\n  filter(suspect_em_2cat_f == \"Yes\") %>%\n  # Make `label` a factor variable\n  mutate(\n    label = factor(label, levels = rev(em_type_labs)),\n    # Convert NA into a character value\n    em_type_value = case_when(is.na(em_type_value) ~ \"NA\",\n                      TRUE ~ em_type_value),\n    em_type_value = factor(em_type_value, \n                   levels = c(\"Yes\", \"No\", \"NA\"),\n                   exclude = NULL\n                   )\n  ) %>% \n  # Relocate the label and remove the description variable\n  relocate(label, .after = suspect_em_2cat_f) %>%\n  select(-c(description, em_type_var, suspect_em_2cat_f)) %>%\n  reframe(\n    count = n(), .by = c(label, em_type_value)\n  ) %>%   \n  # Include counts for factor levels that have zero counts\n  group_by(label) %>%\n  tidyr::complete(em_type_value) %>%\n  ungroup() %>%\n  mutate(\n    count = tidyr::replace_na(count, 0),\n    perc = paste0(format(round((count/suspect_em_no) *100, 1), nsmall = 1), \"%\")\n    )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsus_type_em_table_data <- sus_type_em_plot_data %>%\n  mutate(\n    label = factor(label, levels = em_type_labs)\n  ) %>% arrange(label)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsus_type_em_table_data <- add_shade_column_x_rows(sus_type_em_table_data, 3)\n```\n:::\n\n\n\n# Save data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npath <- here::here(\"data\", \"detect_tool_pilot\", \"dashboard_prepped_data.RData\")\nsave(missing_plot_data, baylor_missing_plot_data, jh_missing_plot_data,\n     ucsf_missing_plot_data, uab_missing_plot_data, utsw_missing_plot_data,\n     lbj_missing_plot_data, utp_missing_plot_data, text_box_table_data, \n     ind_em_plot_data, suspect_em_plot_data, em_type_plot_data, \n     report_plot_data, reports_intended, reports_made, ind_sus_em_plot_data, \n     ind_sus_em_table_data, sus_type_em_plot_data, sus_type_em_table_data, \n     file = path)\n\nrm(list = ls())\n```\n:::\n",
    "supporting": [
      "data_02_detect_tool_pilot_test_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{"title":"Recruitment and Scheduling Tracker","markdown":{"yaml":{"title":"Recruitment and Scheduling Tracker","format":"dashboard","scrolling":true},"headingText":"Libraries","containsRefs":false,"markdown":"\n\n```{r, include = FALSE}\nlibrary(plotly)\nlibrary(here)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(flextable)\nlibrary(officer)\nlibrary(forcats, include.only = c(\"fct_reorder\"))\nlibrary(flexdashboard)\nlibrary(forcats)\n```\n\n```{r, include = FALSE}\n# Load data\ndata_path <- here::here(\"data\", \"recruitment_mock_data_calc.rds\")\ndata <- readRDS(data_path)\n\n# Load functions\nsource(here::here(\"r\", \"color_alert.R\"))\nsource(here::here(\"r\", \"format_table.R\"))\nsource(here::here(\"r\", \"month_name_year.R\"))\nsource(here::here(\"r\", \"gauge_chart.R\"))\n```\n\n#  {.sidebar}\n\n<!-- Create Sidebar -->\n\n```{r, echo=FALSE}\nhead_1 <- \"This dashboard displays statistics for:\\n\\n\"\n\ndata.frame(\n  names = c(\"File Name\", \"Last Modified\"),\n  values = c(basename(data_path), format(Sys.time(), \"%Y-%m-%d %H:%M %Z\"))\n) %>% flextable() %>%\n  delete_part(part = \"header\") %>%\n  bold(j = 1, part = \"body\") %>%\n  border_remove() %>%\n  width(j = c(1,2), width = c(1.2, 1.3), unit = \"in\") %>%\n  add_header_lines(head_1) %>%\n  color(j = c(1,2), color = \"#6c757d\", part = \"body\") %>%\n  color(i = c(1), color = \"#6c757d\", part = \"header\") %>%\n  bg(bg = \"#ffffff\", part = \"body\") %>%\n  hline(part = \"body\", border = fp_border(color = \"#f3f3f3\")) %>%\n  height_all(height = 0.5, unit = \"in\") %>%\n  hrule(rule = \"exact\")\n\n```\n\n```{r, echo=FALSE}\nsubjects <- data %>% select(dyad_id) %>% unique() %>% nrow()\nrecruiters <- data %>% select(rec_id) %>% unique() %>% nrow()\ncalls <- data %>% nrow()\ntime_period <- paste(min(as.Date(data$call_date_time)), \"to\", \n                     max(as.Date(data$call_date_time)))\n\nhead_2 <- \"This data references:\\n\\n\"\n\ndata.frame(\n  names = c(\"Subjects\", \"Recruiters\", \"Calls\", \"Time Period\"),\n  values = c(subjects, recruiters, calls, time_period)\n) %>% flextable() %>%\n  delete_part(part = \"header\") %>%\n  bold(j = 1, part = \"body\") %>%\n  border_remove() %>%\n  width(j = c(1,2), width = c(1.2, 1.2), unit = \"in\") %>%\n  add_header_lines(head_2) %>%\n  color(j = c(1,2), color = \"#6c757d\", part = \"body\") %>%\n  color(i = c(1), color = \"#6c757d\", part = \"header\") %>%\n  bg(bg = \"#ffffff\", part = \"body\") %>%\n  hline(part = \"body\", border = fp_border(color = \"#f3f3f3\")) %>%\n  height_all(height = 0.5, unit = \"in\") %>%\n  hrule(rule = \"exact\")\n\n```\n# Overview {orientation=\"columns\"}\n\n## Column {width=\"30%\"}\n### Row {height=\"20%\"}\n\n```{r, echo = FALSE}\n#|height: 150px\n# Goal for total follow up interviews completed\ngoal <- 180\n\n# Number of currently completed follow up interviews\ncompleted_interviews <- data %>% filter(!is.na(gift_card_id)) %>%\n  select(dyad_id) %>% unique() %>% nrow()\n\n# sectors <- gaugeSectors(\n#   success = c(goal*(80/100), goal*(100/100)),\n#   warning = c(goal*(60/100), goal*(79/100)),\n#   danger = c(goal*(0/100), goal*(59/100)),\n#   colors = c(\"#70bfb3\", \"#ffb700\", \"#ff625e\")\n# )\n# \n# gauge(completed_interviews, min = 0, max = goal,\n#       sectors = sectors)\n\ngauge_chart(completed_interviews, goal)\n```\n\n### Row\n```{r}\n#| echo: false\n#| title: Total calls made\n#| content: valuebox\n#| height: 50%\n\ntot_calls <- data %>% nrow()\n\n# Create value box\nlist(\n  icon = \"telephone-outbound\",\n  color = \"vb-blue\",\n  value = tot_calls\n)\n```\n\n```{r}\n#| echo: false\n#| title: Average calls per day\n#| content: valuebox\n#| height: 50%\n\ncalls_per_day <- data %>%\n  group_by(call_date) %>%\n  reframe(\n    calls_per_day = n()\n  )\n\nav_calls_per_day <- mean(calls_per_day$calls_per_day) %>% round(., 1)\n\nav_calls_per_day <- mean(calls_per_day$calls_per_day) %>% round(., 1)\n\n# Create value box\nlist(\n  icon = \"telephone-outbound\",\n  color = \"vb-blue\",\n  value = av_calls_per_day\n)\n```\n\n### Row\n```{r}\n#| echo: false\n#| title: Total follow-up interviews scheduled\n#| content: valuebox\n\nint_scheduled <- data %>%\n  filter(pc_yes_result == \"Interview scheduled\") %>% select(dyad_id) %>%\n  unique() %>%\n  nrow()\n\n# Create value box\nlist(\n  icon = \"calendar-week\",\n  color = \"vb-blue\",\n  value = int_scheduled\n)\n```\n\n```{r}\n#| echo: false\n#| title: Follow-up interview scheduling rate\n#| content: valuebox\n\nrate_scheduled <- round(tot_calls/int_scheduled)\nscheduled_message <- paste(\"1 per\", rate_scheduled, \"calls\")\n\n# Create value box\nlist(\n  icon = \"list-check\",\n  color = \"vb-blue\",\n  value = scheduled_message\n)\n```\n### Row\n```{r}\n#| echo: false\n#| title: Average calls per dyad\n#| content: valuebox\n\ncalls_per_dyad <- data %>%\n  group_by(dyad_id) %>%\n  summarise(\n    calls_per_dyad = n()\n  )\n\nav_calls_per_dyad <- mean(calls_per_dyad$calls_per_dyad) %>% round(., 1)\n\n# Create value box\nlist(\n  icon = \"telephone-outbound\",\n  color = \"vb-blue\",\n  value = av_calls_per_dyad\n)\n```\n\n```{r}\n#| echo: false\n#| title: Total calls made 2 weeks ago\n#| content: valuebox\n\ncalls_2_weeks <- data %>%\n  filter(as.Date(call_date) %in% seq(max(as.Date(call_date)) - 20,\n                                     max(as.Date(call_date)) - 14 , \"day\")) %>% nrow()\n\n# Create value box\nlist(\n  icon = \"telephone-outbound\",\n  color = \"vb-blue\",\n  value = calls_2_weeks\n)\n```\n### Row\n```{r}\n#| echo: false\n#| title: Total calls made last week\n#| content: valuebox\n\ncalls_1_week <- data %>%\n  filter(as.Date(call_date) %in% seq(max(as.Date(call_date)) - 13,\n                                     max(as.Date(call_date)) - 7, \"day\")\n         ) %>%\n  nrow()\n\n# Create value box\nlist(\n  icon = \"telephone-outbound\",\n  color = \"vb-blue\",\n  value = calls_1_week\n)\n```\n\n```{r}\n#| echo: false\n#| title: Percent change between two weeks ago and last week\n#| content: valuebox\n\npct_change <- (abs(calls_1_week - calls_2_weeks)/ calls_1_week)*100\n\n# Create value box\nlist(\n  icon = \"telephone-outbound\",\n  color = \"vb-blue\",\n  value = paste0(format(round(pct_change, 2), nsmall = 2), \"%\")\n)\n```\n## Column\n```{r, echo=FALSE}\n#| title: Recruiting calls made and follow-up interviews scheduled by date\nht_text <- paste(\"<br>Date: %{x}\",\n  \"<br>N called: %{y}\", \n  \"<br>N scheduled: %{text} <extra></extra>\")\n\ndata %>%\n  group_by(call_date) %>%\n  mutate(\n    fu_scheduled = case_when(\n      length(which(pc_yes_result == \"Interview scheduled\")) == 0     ~ \"None\",\n      any(pc_yes_result == \"Interview scheduled\") & \n        length(which(pc_yes_result == \"Interview scheduled\")) == 1   ~ \"1\",\n      any(pc_yes_result == \"Interview scheduled\") & \n        length(which(pc_yes_result == \"Interview scheduled\")) > 1    ~ \"2 or More\",\n    )\n  ) %>% \n  reframe(\n    call_date,\n    call_month_yr,\n    calls_per_day = n(),\n    fu_scheduled\n  ) %>% distinct() %>%\nplot_ly(\n  x = ~call_date,\n  y = ~ calls_per_day,\n  type = \"scatter\",\n  mode = \"lines+markers\",\n  line = list(\n    color = '#ededed'),\n  color = ~fu_scheduled,\n  text = ~ fu_scheduled,\n  hovertemplate = ht_text\n) %>%\n  layout(\n    yaxis = list(\n      zerolinecolor = 'black',\n      title = \"Number of Calls\"\n    ),\n    xaxis = list(\n      title = \"Date\",\n      zerolinecolor = 'black'\n    ),\n    legend=list(title=list(text='<b>F/U Scheduled </b>'))\n  )\n```\n\n```{r, echo=FALSE}\n#| title: Recruiting calls made and follow-up interviews scheduled by date\nht_text <- paste(\"<br>Date: %{x}\",\n  \"<br>Ratio: %{y}\")\n\ndata %>%\n  group_by(call_date) %>%\n  mutate(\n    fu_scheduled = length(which(pc_yes_result == \"Interview scheduled\"))\n  ) %>% \n  reframe(\n    call_date,\n    call_month_yr,\n    calls_per_day = n(),\n    fu_scheduled\n  ) %>% distinct() %>%\n  mutate(\n    ratio = fu_scheduled/calls_per_day\n  ) %>%\nplot_ly(\n  x = ~ call_date,\n  y = ~ ratio,\n  type = \"scatter\",\n  mode = \"lines+markers\",\n  line = list(\n    color = '#ededed'),\n  hovertemplate = ht_text\n) %>%\n  layout(\n    yaxis = list(\n      zerolinecolor = 'black',\n      title = \"Ratio of N Scheduled to N Calls\"\n    ),\n    xaxis = list(\n      title = \"Date\",\n      zerolinecolor = 'black'\n    )\n  )\n```\n\n\n# Call Timing {orientation=\"columns\"}\n\n## Column\n\n```{r}\nformatted_flex <- function(df, header_list){\n  df %>% flextable() %>%\n  set_header_labels(values = header_list) %>%\n  width(width = 2, unit = \"in\")%>%\n  # Align body\n  align(j = -c(1), part = \"all\", align = \"center\") %>%\n  bold(part = \"header\") %>%\n  border_remove() %>%\n  hline(part = \"header\", border = fp_border(color = \"#ededed\",\n                                            width = 2)) %>%\n  hline(part = \"body\", border = fp_border(color = \"#ededed\"))\n}\n```\n\n\n```{r, echo=FALSE}\n#| title: Follow-up interviews scheduled by day of the week\nh_list <- list(call_day = \"Day\",\n               calls_made = \"Calls Made\",\n               fu_sch = \"F/U Interviews Scheduled\",\n               perc_sch = \"Percent Scheduled\")\n  \ndata %>%\n  group_by(call_day) %>%\n  summarise(\n    calls_made = n(),\n    fu_sch = length(which(pc_yes_result == \"Interview scheduled\")),\n    perc_sch = paste0(format(round((fu_sch/calls_made)*100, 2), \n                             nsmall = 2), \"%\")\n  ) %>% arrange(call_day) %>%\n  formatted_flex(., h_list)\n\n```\n\n```{r, echo=FALSE}\n#| title: Follow-up interviews scheduled by time of day\nh_list <- list(call_hour_f = \"Time of Day\",\n               calls_made = \"Calls Made\",\n               fu_sch = \"F/U Interviews Scheduled\",\n               perc_sch = \"Percent Scheduled\")\n\ndata %>%\n  group_by(call_hour_f) %>%\n  summarise(\n    calls_made = n(),\n    fu_sch = length(which(pc_yes_result == \"Interview scheduled\")),\n    perc_sch = paste0(format(round((fu_sch/calls_made)*100, 2), \n                             nsmall = 2), \"%\")\n  ) %>% arrange(call_hour_f) %>%\n  formatted_flex(., h_list)\n```\n\n## Column\n```{r, echo=FALSE}\n#| title: Calls made by day of the week\nht_text_1 <- paste(\"<br>Day: %{x}\",\n  \"<br>N: %{y}\",\n  \"<extra></extra>\")\n\nht_text_2 <- paste(\"<br>Day: %{x}\",\n  \"<br>Mean: %{y}\",\n  \"<extra></extra>\")\n\ncalls_per_date <- data %>%\n  group_by(call_date) %>%\n  reframe(\n    call_day,\n    calls_per_day = n()\n  ) %>% \n  distinct() %>%\n  ungroup() %>%\n  group_by(call_day) %>%\n  mutate(\n    mean_calls_per_wk_dy = sum(calls_per_day)/n()\n  ) %>% arrange(call_day) %>% select(call_day, call_date, calls_per_day, \n                                     mean_calls_per_wk_dy)\n\nper_date_plot <- plot_ly() %>%\n  add_trace(\n  x = calls_per_date$call_day,\n  y = calls_per_date$calls_per_day,\n  type = \"scatter\",\n  mode = \"markers\",\n  color = calls_per_date$call_day,\n  hovertemplate = ht_text_1\n) %>%\n  layout(\n    yaxis = list(\n      zerolinecolor = 'black',\n      title = \"Number of Calls Per Date\"\n    ),\n    xaxis = list(\n      title = \"Day\",\n      zerolinecolor = 'black'\n    ),\n    showlegend = FALSE\n  )\n\n\nmean_calls_per_date <- calls_per_date %>%\n  select(call_day, mean_calls_per_wk_dy) %>% distinct()\n\n\nper_date_plot %>% add_trace(x = mean_calls_per_date$call_day,\n                            y = mean_calls_per_date$mean_calls_per_wk_dy,\n                            type = \"scatter\",\n                            mode = \"markers\",\n                            marker = list(symbol = \"line-ew-open\",\n                                          size = 20),\n                            color = mean_calls_per_date$call_day,\n                            hovertemplate = ht_text_2,\n                            textposition = FALSE\n)\n# vals\n```\n\n```{r, echo=FALSE}\n#| title: Calls by time of day\ntime_day_plot <- data %>% \n  group_by(call_hour_f) %>%\n  reframe(\n    calls_per_time = n(),\n    text_label = paste0(\"Time of Day: \", call_hour_f, \"\\nN: \", calls_per_time)\n  ) %>% distinct() %>%\n  ggplot(\n    aes(x = calls_per_time, y = call_hour_f, fill = calls_per_time, \n        text = paste(text_label))\n  ) +\n  geom_bar(stat = \"identity\") +\n  theme_classic() +\n  theme(\n    legend.position = \"none\",\n  ) +\n    xlab(\"Number of Calls\") +\n    ylab(\"Time of the Day\")\n\nggplotly(time_day_plot, tooltip = c(\"text\"), textposition = \"center\") %>%\n  layout(hoverlabel = list(align=\"left\")\n         )\n```\n\n\n# Call Responses\n\n```{r, echo = FALSE}\n#| title: Call log responses overall\nh_list <- list(overall_response = \"Call Log Responses Overall\",\n               cumm_count = \"Cummulative Count\")\n\ndata %>% \n  arrange(overall_response) %>%\n  group_by(overall_response) %>%\n  summarise(\n    Count = n()\n  ) %>% distinct() %>%\n  ungroup() %>%\n  mutate(\n    cumm_count = cumsum(Count),\n    Percent = (Count/sum(Count) * 100) %>% round(0) %>% paste0(\"%\")\n  ) %>%\n  formatted_flex(., h_list)\n\n\n```\n\n\n","srcMarkdownNoYaml":"\n\n```{r, include = FALSE}\n# Libraries\nlibrary(plotly)\nlibrary(here)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(flextable)\nlibrary(officer)\nlibrary(forcats, include.only = c(\"fct_reorder\"))\nlibrary(flexdashboard)\nlibrary(forcats)\n```\n\n```{r, include = FALSE}\n# Load data\ndata_path <- here::here(\"data\", \"recruitment_mock_data_calc.rds\")\ndata <- readRDS(data_path)\n\n# Load functions\nsource(here::here(\"r\", \"color_alert.R\"))\nsource(here::here(\"r\", \"format_table.R\"))\nsource(here::here(\"r\", \"month_name_year.R\"))\nsource(here::here(\"r\", \"gauge_chart.R\"))\n```\n\n#  {.sidebar}\n\n<!-- Create Sidebar -->\n\n```{r, echo=FALSE}\nhead_1 <- \"This dashboard displays statistics for:\\n\\n\"\n\ndata.frame(\n  names = c(\"File Name\", \"Last Modified\"),\n  values = c(basename(data_path), format(Sys.time(), \"%Y-%m-%d %H:%M %Z\"))\n) %>% flextable() %>%\n  delete_part(part = \"header\") %>%\n  bold(j = 1, part = \"body\") %>%\n  border_remove() %>%\n  width(j = c(1,2), width = c(1.2, 1.3), unit = \"in\") %>%\n  add_header_lines(head_1) %>%\n  color(j = c(1,2), color = \"#6c757d\", part = \"body\") %>%\n  color(i = c(1), color = \"#6c757d\", part = \"header\") %>%\n  bg(bg = \"#ffffff\", part = \"body\") %>%\n  hline(part = \"body\", border = fp_border(color = \"#f3f3f3\")) %>%\n  height_all(height = 0.5, unit = \"in\") %>%\n  hrule(rule = \"exact\")\n\n```\n\n```{r, echo=FALSE}\nsubjects <- data %>% select(dyad_id) %>% unique() %>% nrow()\nrecruiters <- data %>% select(rec_id) %>% unique() %>% nrow()\ncalls <- data %>% nrow()\ntime_period <- paste(min(as.Date(data$call_date_time)), \"to\", \n                     max(as.Date(data$call_date_time)))\n\nhead_2 <- \"This data references:\\n\\n\"\n\ndata.frame(\n  names = c(\"Subjects\", \"Recruiters\", \"Calls\", \"Time Period\"),\n  values = c(subjects, recruiters, calls, time_period)\n) %>% flextable() %>%\n  delete_part(part = \"header\") %>%\n  bold(j = 1, part = \"body\") %>%\n  border_remove() %>%\n  width(j = c(1,2), width = c(1.2, 1.2), unit = \"in\") %>%\n  add_header_lines(head_2) %>%\n  color(j = c(1,2), color = \"#6c757d\", part = \"body\") %>%\n  color(i = c(1), color = \"#6c757d\", part = \"header\") %>%\n  bg(bg = \"#ffffff\", part = \"body\") %>%\n  hline(part = \"body\", border = fp_border(color = \"#f3f3f3\")) %>%\n  height_all(height = 0.5, unit = \"in\") %>%\n  hrule(rule = \"exact\")\n\n```\n# Overview {orientation=\"columns\"}\n\n## Column {width=\"30%\"}\n### Row {height=\"20%\"}\n\n```{r, echo = FALSE}\n#|height: 150px\n# Goal for total follow up interviews completed\ngoal <- 180\n\n# Number of currently completed follow up interviews\ncompleted_interviews <- data %>% filter(!is.na(gift_card_id)) %>%\n  select(dyad_id) %>% unique() %>% nrow()\n\n# sectors <- gaugeSectors(\n#   success = c(goal*(80/100), goal*(100/100)),\n#   warning = c(goal*(60/100), goal*(79/100)),\n#   danger = c(goal*(0/100), goal*(59/100)),\n#   colors = c(\"#70bfb3\", \"#ffb700\", \"#ff625e\")\n# )\n# \n# gauge(completed_interviews, min = 0, max = goal,\n#       sectors = sectors)\n\ngauge_chart(completed_interviews, goal)\n```\n\n### Row\n```{r}\n#| echo: false\n#| title: Total calls made\n#| content: valuebox\n#| height: 50%\n\ntot_calls <- data %>% nrow()\n\n# Create value box\nlist(\n  icon = \"telephone-outbound\",\n  color = \"vb-blue\",\n  value = tot_calls\n)\n```\n\n```{r}\n#| echo: false\n#| title: Average calls per day\n#| content: valuebox\n#| height: 50%\n\ncalls_per_day <- data %>%\n  group_by(call_date) %>%\n  reframe(\n    calls_per_day = n()\n  )\n\nav_calls_per_day <- mean(calls_per_day$calls_per_day) %>% round(., 1)\n\nav_calls_per_day <- mean(calls_per_day$calls_per_day) %>% round(., 1)\n\n# Create value box\nlist(\n  icon = \"telephone-outbound\",\n  color = \"vb-blue\",\n  value = av_calls_per_day\n)\n```\n\n### Row\n```{r}\n#| echo: false\n#| title: Total follow-up interviews scheduled\n#| content: valuebox\n\nint_scheduled <- data %>%\n  filter(pc_yes_result == \"Interview scheduled\") %>% select(dyad_id) %>%\n  unique() %>%\n  nrow()\n\n# Create value box\nlist(\n  icon = \"calendar-week\",\n  color = \"vb-blue\",\n  value = int_scheduled\n)\n```\n\n```{r}\n#| echo: false\n#| title: Follow-up interview scheduling rate\n#| content: valuebox\n\nrate_scheduled <- round(tot_calls/int_scheduled)\nscheduled_message <- paste(\"1 per\", rate_scheduled, \"calls\")\n\n# Create value box\nlist(\n  icon = \"list-check\",\n  color = \"vb-blue\",\n  value = scheduled_message\n)\n```\n### Row\n```{r}\n#| echo: false\n#| title: Average calls per dyad\n#| content: valuebox\n\ncalls_per_dyad <- data %>%\n  group_by(dyad_id) %>%\n  summarise(\n    calls_per_dyad = n()\n  )\n\nav_calls_per_dyad <- mean(calls_per_dyad$calls_per_dyad) %>% round(., 1)\n\n# Create value box\nlist(\n  icon = \"telephone-outbound\",\n  color = \"vb-blue\",\n  value = av_calls_per_dyad\n)\n```\n\n```{r}\n#| echo: false\n#| title: Total calls made 2 weeks ago\n#| content: valuebox\n\ncalls_2_weeks <- data %>%\n  filter(as.Date(call_date) %in% seq(max(as.Date(call_date)) - 20,\n                                     max(as.Date(call_date)) - 14 , \"day\")) %>% nrow()\n\n# Create value box\nlist(\n  icon = \"telephone-outbound\",\n  color = \"vb-blue\",\n  value = calls_2_weeks\n)\n```\n### Row\n```{r}\n#| echo: false\n#| title: Total calls made last week\n#| content: valuebox\n\ncalls_1_week <- data %>%\n  filter(as.Date(call_date) %in% seq(max(as.Date(call_date)) - 13,\n                                     max(as.Date(call_date)) - 7, \"day\")\n         ) %>%\n  nrow()\n\n# Create value box\nlist(\n  icon = \"telephone-outbound\",\n  color = \"vb-blue\",\n  value = calls_1_week\n)\n```\n\n```{r}\n#| echo: false\n#| title: Percent change between two weeks ago and last week\n#| content: valuebox\n\npct_change <- (abs(calls_1_week - calls_2_weeks)/ calls_1_week)*100\n\n# Create value box\nlist(\n  icon = \"telephone-outbound\",\n  color = \"vb-blue\",\n  value = paste0(format(round(pct_change, 2), nsmall = 2), \"%\")\n)\n```\n## Column\n```{r, echo=FALSE}\n#| title: Recruiting calls made and follow-up interviews scheduled by date\nht_text <- paste(\"<br>Date: %{x}\",\n  \"<br>N called: %{y}\", \n  \"<br>N scheduled: %{text} <extra></extra>\")\n\ndata %>%\n  group_by(call_date) %>%\n  mutate(\n    fu_scheduled = case_when(\n      length(which(pc_yes_result == \"Interview scheduled\")) == 0     ~ \"None\",\n      any(pc_yes_result == \"Interview scheduled\") & \n        length(which(pc_yes_result == \"Interview scheduled\")) == 1   ~ \"1\",\n      any(pc_yes_result == \"Interview scheduled\") & \n        length(which(pc_yes_result == \"Interview scheduled\")) > 1    ~ \"2 or More\",\n    )\n  ) %>% \n  reframe(\n    call_date,\n    call_month_yr,\n    calls_per_day = n(),\n    fu_scheduled\n  ) %>% distinct() %>%\nplot_ly(\n  x = ~call_date,\n  y = ~ calls_per_day,\n  type = \"scatter\",\n  mode = \"lines+markers\",\n  line = list(\n    color = '#ededed'),\n  color = ~fu_scheduled,\n  text = ~ fu_scheduled,\n  hovertemplate = ht_text\n) %>%\n  layout(\n    yaxis = list(\n      zerolinecolor = 'black',\n      title = \"Number of Calls\"\n    ),\n    xaxis = list(\n      title = \"Date\",\n      zerolinecolor = 'black'\n    ),\n    legend=list(title=list(text='<b>F/U Scheduled </b>'))\n  )\n```\n\n```{r, echo=FALSE}\n#| title: Recruiting calls made and follow-up interviews scheduled by date\nht_text <- paste(\"<br>Date: %{x}\",\n  \"<br>Ratio: %{y}\")\n\ndata %>%\n  group_by(call_date) %>%\n  mutate(\n    fu_scheduled = length(which(pc_yes_result == \"Interview scheduled\"))\n  ) %>% \n  reframe(\n    call_date,\n    call_month_yr,\n    calls_per_day = n(),\n    fu_scheduled\n  ) %>% distinct() %>%\n  mutate(\n    ratio = fu_scheduled/calls_per_day\n  ) %>%\nplot_ly(\n  x = ~ call_date,\n  y = ~ ratio,\n  type = \"scatter\",\n  mode = \"lines+markers\",\n  line = list(\n    color = '#ededed'),\n  hovertemplate = ht_text\n) %>%\n  layout(\n    yaxis = list(\n      zerolinecolor = 'black',\n      title = \"Ratio of N Scheduled to N Calls\"\n    ),\n    xaxis = list(\n      title = \"Date\",\n      zerolinecolor = 'black'\n    )\n  )\n```\n\n\n# Call Timing {orientation=\"columns\"}\n\n## Column\n\n```{r}\nformatted_flex <- function(df, header_list){\n  df %>% flextable() %>%\n  set_header_labels(values = header_list) %>%\n  width(width = 2, unit = \"in\")%>%\n  # Align body\n  align(j = -c(1), part = \"all\", align = \"center\") %>%\n  bold(part = \"header\") %>%\n  border_remove() %>%\n  hline(part = \"header\", border = fp_border(color = \"#ededed\",\n                                            width = 2)) %>%\n  hline(part = \"body\", border = fp_border(color = \"#ededed\"))\n}\n```\n\n\n```{r, echo=FALSE}\n#| title: Follow-up interviews scheduled by day of the week\nh_list <- list(call_day = \"Day\",\n               calls_made = \"Calls Made\",\n               fu_sch = \"F/U Interviews Scheduled\",\n               perc_sch = \"Percent Scheduled\")\n  \ndata %>%\n  group_by(call_day) %>%\n  summarise(\n    calls_made = n(),\n    fu_sch = length(which(pc_yes_result == \"Interview scheduled\")),\n    perc_sch = paste0(format(round((fu_sch/calls_made)*100, 2), \n                             nsmall = 2), \"%\")\n  ) %>% arrange(call_day) %>%\n  formatted_flex(., h_list)\n\n```\n\n```{r, echo=FALSE}\n#| title: Follow-up interviews scheduled by time of day\nh_list <- list(call_hour_f = \"Time of Day\",\n               calls_made = \"Calls Made\",\n               fu_sch = \"F/U Interviews Scheduled\",\n               perc_sch = \"Percent Scheduled\")\n\ndata %>%\n  group_by(call_hour_f) %>%\n  summarise(\n    calls_made = n(),\n    fu_sch = length(which(pc_yes_result == \"Interview scheduled\")),\n    perc_sch = paste0(format(round((fu_sch/calls_made)*100, 2), \n                             nsmall = 2), \"%\")\n  ) %>% arrange(call_hour_f) %>%\n  formatted_flex(., h_list)\n```\n\n## Column\n```{r, echo=FALSE}\n#| title: Calls made by day of the week\nht_text_1 <- paste(\"<br>Day: %{x}\",\n  \"<br>N: %{y}\",\n  \"<extra></extra>\")\n\nht_text_2 <- paste(\"<br>Day: %{x}\",\n  \"<br>Mean: %{y}\",\n  \"<extra></extra>\")\n\ncalls_per_date <- data %>%\n  group_by(call_date) %>%\n  reframe(\n    call_day,\n    calls_per_day = n()\n  ) %>% \n  distinct() %>%\n  ungroup() %>%\n  group_by(call_day) %>%\n  mutate(\n    mean_calls_per_wk_dy = sum(calls_per_day)/n()\n  ) %>% arrange(call_day) %>% select(call_day, call_date, calls_per_day, \n                                     mean_calls_per_wk_dy)\n\nper_date_plot <- plot_ly() %>%\n  add_trace(\n  x = calls_per_date$call_day,\n  y = calls_per_date$calls_per_day,\n  type = \"scatter\",\n  mode = \"markers\",\n  color = calls_per_date$call_day,\n  hovertemplate = ht_text_1\n) %>%\n  layout(\n    yaxis = list(\n      zerolinecolor = 'black',\n      title = \"Number of Calls Per Date\"\n    ),\n    xaxis = list(\n      title = \"Day\",\n      zerolinecolor = 'black'\n    ),\n    showlegend = FALSE\n  )\n\n\nmean_calls_per_date <- calls_per_date %>%\n  select(call_day, mean_calls_per_wk_dy) %>% distinct()\n\n\nper_date_plot %>% add_trace(x = mean_calls_per_date$call_day,\n                            y = mean_calls_per_date$mean_calls_per_wk_dy,\n                            type = \"scatter\",\n                            mode = \"markers\",\n                            marker = list(symbol = \"line-ew-open\",\n                                          size = 20),\n                            color = mean_calls_per_date$call_day,\n                            hovertemplate = ht_text_2,\n                            textposition = FALSE\n)\n# vals\n```\n\n```{r, echo=FALSE}\n#| title: Calls by time of day\ntime_day_plot <- data %>% \n  group_by(call_hour_f) %>%\n  reframe(\n    calls_per_time = n(),\n    text_label = paste0(\"Time of Day: \", call_hour_f, \"\\nN: \", calls_per_time)\n  ) %>% distinct() %>%\n  ggplot(\n    aes(x = calls_per_time, y = call_hour_f, fill = calls_per_time, \n        text = paste(text_label))\n  ) +\n  geom_bar(stat = \"identity\") +\n  theme_classic() +\n  theme(\n    legend.position = \"none\",\n  ) +\n    xlab(\"Number of Calls\") +\n    ylab(\"Time of the Day\")\n\nggplotly(time_day_plot, tooltip = c(\"text\"), textposition = \"center\") %>%\n  layout(hoverlabel = list(align=\"left\")\n         )\n```\n\n\n# Call Responses\n\n```{r, echo = FALSE}\n#| title: Call log responses overall\nh_list <- list(overall_response = \"Call Log Responses Overall\",\n               cumm_count = \"Cummulative Count\")\n\ndata %>% \n  arrange(overall_response) %>%\n  group_by(overall_response) %>%\n  summarise(\n    Count = n()\n  ) %>% distinct() %>%\n  ungroup() %>%\n  mutate(\n    cumm_count = cumsum(Count),\n    Percent = (Count/sum(Count) * 100) %>% round(0) %>% paste0(\"%\")\n  ) %>%\n  formatted_flex(., h_list)\n\n\n```\n\n\n"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"recruitment_and_scheduling_tracker.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.549","page-layout":"custom","title":"Recruitment and Scheduling Tracker","scrolling":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}